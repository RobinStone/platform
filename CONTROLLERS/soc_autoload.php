<?phpenum PROFIL_TYPE {    case login;    case id;    case email;}enum TYPE_INTERVAL {    case seconds;    case minutes;    case hours;    case days;}enum mess_type {    case text;    case image;    case video;    case audio;    case file;    case pdf;}enum MODALITY:string {    case empty = 'empty';    case user = 'user';    case operator = 'operator';    case easy_seller = 'easy-seller';    case admin = 'admin';    case super_admin = 'super-admin';    case seo_operator = 'seo-operator';}function SQL_ONE_ROW($ask):bool|array{    $arr = false;    if($ask->num_rows) {        $arr = $ask->fetch_assoc();    }    return $arr;}function SQL_ROWS($ask): array{    $arr = [];    if($ask->num_rows) {        while($row = $ask->fetch_assoc()) {            $arr[] = $row;        }    }    return $arr;}function SQL_ROWS_FIELD($ask, $field_name): array{    $arr = [];    if($ask->num_rows) {        while($row = $ask->fetch_assoc()) {            $arr[$row[$field_name]] = $row;        }    }    return $arr;}function wtf($array, $stop = false) {    echo '<pre style="font-size: 13px; line-height: 16px">'.print_r($array,1).'</pre>';    if(!$stop) {        exit();    }}/** * @param $query * @param int $key * @return mysqli_result */function q($query, $key = 0) {    try {        $res = DB::_($key)->query($query);        if($res === false) {            $info = debug_backtrace();    // откуда вызывалась функция полная информация            echo '<div style="margin-top: 300px">';            echo 'ЗАПРОС: '.$query.'<br>'.DB::_($key)->error.'<br><hr>';            wtf($info, 1);            echo 'ФАЙЛ - '.$info[0]['file'].'<br>СТРОКА - '.$info[0]['line'];            echo '</div>';            $error = 'Ошибка в запросе: '.date('Y-m-d h:i:s')."\n".$query."\n\n".'ФАЙЛ - '.$info[0]['file']."\n".'СТРОКА - '.$info[0]['line']."\n".'=======================================================';            file_put_contents('./logs/query_errors.txt', $error."\n\n", FILE_APPEND);            $_SESSION['errors'][] = 'ошибка в запросе';            return false;        } else {            return $res;        }    } catch (Exception $e) {        $info = debug_backtrace();    // откуда вызывалась функция полная информация        echo '<div style="margin-top: 300px">';        echo 'ЗАПРОС: '.$query.'<br>'.DB::_($key)->error.'<br><hr>';        wtf($info, 1);        echo 'ФАЙЛ - '.$info[0]['file'].'<br>СТРОКА - '.$info[0]['line'];        echo '</div>';        $error = 'Ошибка в запросе: '.date('Y-m-d h:i:s')."\n".$query."\n\n".'ФАЙЛ - '.$info[0]['file']."\n".'СТРОКА - '.$info[0]['line']."\n".'=======================================================';        file_put_contents('./logs/query_errors.txt', $error."\n\n", FILE_APPEND);        $_SESSION['errors'][] = 'ошибка в запросе';        return false;    }}function say($val) {    if(!is_array($val) && !is_object($val)) {        $info = debug_backtrace();    // откуда вызывалась функция полная информация        $mess = date('H:i:s') . "\n" . htmlspecialchars_decode($val) . "\n" .                'File - ' . $info[0]['file'] . '     line = ' . $info[0]['line'] . "\n" . '=============================' . "\n\n";    } else {        $info = debug_backtrace();        if(is_object($val)) {            $val->FILE_INFO = $info;        } else {//            $val['FILE_INFO'] = $info;        }        $mess = print_r($val, true);    }    file_put_contents(__DIR__.'/../logs/say.txt', $mess, FILE_APPEND);}function say_string($val) {    file_put_contents(__DIR__.'/../logs/say.txt', $mess, FILE_APPEND);}function out_secur($var) {    if(!is_array($var)) {        $var = htmlspecialchars($var);    } else {        $var = array_map('out_secur', $var);    }    return $var;}function db_secur($var, $key = 0) {    if(!is_array($var)) {        $var = DB::_($key)->real_escape_string($var);    } else {        $var = array_map('db_secur', DB::_($key)->real_escape_string($var));    }    return $var;}function trimAll($var) {    if(!is_array($var)) {        $var = trim($var);    } else {        $var = array_map('trimAll', $var);    }    return $var;}function start_transaction() {    q("start transaction;");}function end_transaction() {    q("commit;");}function error_transaction() {    q("rollback;");}function crypter($var) {    $salt1 = Core::$CRYPTER_SALT_1;    $salt2 = Core::$CRYPTER_SALT_2;    return crypt(md5($salt2.$var.$salt1), $salt2);}function render($tpl, $arr=[]): bool|string {    extract($arr);    ob_start();    if(file_exists($_SERVER['DOCUMENT_ROOT'].'/CONTROLLERS/EXE/'.$tpl.'Controller.php')) {        include_once('./CONTROLLERS/EXE/' . $tpl . 'Controller.php');    }    if(file_exists($_SERVER['DOCUMENT_ROOT'].'/TEMPLATES/CSS/'.$tpl.'.css')) {        if(!in_array($tpl, Core::$CSS)) {            Core::$CSS[] = '<link rel="stylesheet" href="/TEMPLATES/CSS/'.$tpl.'.css?'.filemtime("./TEMPLATES/CSS/".$tpl.".css").'">';        }    }    if(file_exists($_SERVER['DOCUMENT_ROOT'].'/TEMPLATES/JS/'.$tpl.'.js')) {        if(!in_array($tpl, Core::$JS)) {//            TELE::send_at_user_name('robin', $_SERVER['DOCUMENT_ROOT'].'/TEMPLATES/JS/'.$tpl.'.js');            Core::$JS[] = '<script src="/TEMPLATES/JS/'.$tpl.'.js?'.filemtime("./TEMPLATES/JS/".$tpl.".js").'"></script>';        }    }    if(file_exists($_SERVER['DOCUMENT_ROOT'].'/TEMPLATES/'.$tpl.'.php')) {        include('./TEMPLATES/' . $tpl . '.php');    } else {        echo render('404');    }    return ob_get_clean();}function getParam($param) {    $val = SUBD::getLineDB('main', 'param', $param);    if(is_array($val)) {        return $val['argum'];    } else {        return '-';    }}function setParam($param, $argum) {    $p = getParam($param);    if($p == '-') {        q("             INSERT INTO `main` SET              `param`             = '".db_secur($param)."',              `argum`             = '".db_secur($argum)."',              `paramDescription`  = '-'            ");    } else {        q("            UPDATE `main` SET             `argum`             = '".db_secur($argum)."'            WHERE `param`       = '".db_secur($param)."'            ");    }}function delParam($param) {    $p = getParam($param);    if($p != '-') {        q("         DELETE FROM `main` WHERE `param` = '".db_secur($param)."'        ");    } else {        echo 'Variable is not exist.';        exit;    }}function INCLUDE_CLASS($app_name, $class_name) {    $name = './APPLICATIONS/'.mb_strtoupper($app_name).'/libs/class_'.mb_strtoupper($class_name).'.php';    if(file_exists($name)) {        include_once $name;    } else {        Message::addError('Назначен к подключению класс приложения, которого не существует<br>'.$name);    }}function t($message) {    TELE::send_at_user_name('robin', $message);}//include_once ('./CONTROLLERS/preloader.php');
let moove_obj=null;$(document).on('click', '#body-s', function (e) {    if($('#find-media li').length > 0) {        clear_find_list();    }    // $('.yellow-border').removeClass('yellow-border');});$(document).on('dblclick', '.music-item', function (e) {    let obj = this;    play_one_track(obj);    e.stopPropagation();    e.preventDefault();});$(document).on('change', '#find-media li input', function (e) {    let obj = this;    e.stopPropagation();    e.preventDefault();    if($(obj).prop('checked')) {        $(obj).closest('li').addClass('sel');    } else {        $(obj).closest('li').removeClass('sel');    }    setTimeout(function() {        if($('.media-item.sel').length > 0) {            $('#finder-wrapper button').removeClass('invisible');        } else {            $('#finder-wrapper button').addClass('invisible');        }    }, 10);});$(document).on('dblclick', '#folder-wrapper .folder', function (e) {    console.log('FOLDER');    e.stopPropagation();    e.preventDefault();    let obj = this;    if($(obj).prop('open')) {        $(obj).removeAttr('open');    } else {        $(obj).prop('open', true);    }    setTimeout(function() {        save_map();    }, 200);});$(document).on('click', '#folder-wrapper .folder', function (e) {    $('.yellow-border').removeClass('yellow-border');    $(this).addClass('yellow-border');    e.preventDefault();    e.stopPropagation();});$(document).on('click', '#folder-wrapper', function (e) {    e.stopPropagation();});$(document).on('dblclick', '.media-item', function (e) {    e.stopPropagation();    e.preventDefault();    let t = this;    let obj = {        name: $(t).text(),        src: $(t).attr('data-sys'),        id: $(t).attr('data-id'),    }    let playlist = jplayer;    clear_play_list();    setTimeout(function() {        addTrackToPlaylist(obj.name, '/DOWNLOAD/'+obj.src, obj.id);        setTimeout(function() {            $('.jp-play').click();            setTimeout(function() {                playlist.play(0);            }, 500);        }, 100);    }, 300);});$(document).on('input click', '#finder-wrapper input[type="text"]', function (e) {    buffer_app = 'MUSIC';    let txt = $(this).val();    if(txt.length >= 2) {        SENDER_APP('find', {txt: txt}, function (mess) {            mess_executer(mess, function (mess) {                clear_find_list();                console.dir(mess);                let arr = mess.params;                if(Object.keys(arr).length > 0) {                    for(let i in arr) {                        $('#find-media').append('<li data-id="'+arr[i].id+'" data-sys="'+arr[i].sys_name+'" class="media-item flex gap-5"><input type="checkbox">'+arr[i].user_name+'</li>');                    }                    $('#check-all').removeClass('disabled');                }            });        });    } else {        clear_find_list();    }});$(document).on('dragover', '.folder > summary', function (e) {    $(this).addClass('load-in');    e.preventDefault();    e.stopPropagation();});$(document).on('dragstart', '.folder:not(:first-child), .music-item', function (e) {    $(this).addClass('glass');    moove_obj = this;    e.stopPropagation();});$(document).on('dragleave', '.folder > summary', function (e) {    $(this).removeClass('load-in');    e.preventDefault();    e.stopPropagation();});$(document).on('drop', '.folder > summary', function (e) {    $('.glass').removeClass('glass');    $('.load-in').removeClass('load-in');    let obj = $(this).closest('.folder');    let name_move_folder = $('details[data-path="'+$(moove_obj).attr('data-path')+'"] > summary').text();    buffer_app = 'MUSIC';    if($(moove_obj).hasClass('folder')) {        SENDER_APP('change_order', {type: 'folder', name: $(moove_obj).attr('data-path'), parent: $(obj).attr('data-path')}, function(mess) {            mess_executer(mess, function(mess) {                $(moove_obj).attr('data-path', $(obj).attr('data-path')+'/'+name_move_folder);                $(obj).append(moove_obj);                moove_obj = null;                save_map();            });        });    } else {        let old_folder = $(moove_obj).closest('.folder').attr('data-path');        SENDER_APP('change_order', {type: 'file', old_folder: old_folder, name: $(moove_obj).attr('data-id'), parent: $(obj).attr('data-path')}, function(mess) {            mess_executer(mess, function(mess) {                $(obj).children('.play-list-folder').append(moove_obj);                moove_obj = null;            });        });    }});$(document).on('dragend', '.folder:not(:first-child), .music-item', function (e) {    $('.glass').removeClass('glass');});function clear_find_list() {    $('#find-media').empty();    $('#check-all').addClass('disabled');}function sel_all_audio(obj) {    if($(obj).prop('checked')) {        $('.media-item').addClass('sel');        $('#find-media li input').prop('checked', true);        $('#finder-wrapper button').removeClass('invisible');    } else {        $('.media-item').removeClass('sel');        $('#find-media li input').prop('checked', false);        $('#finder-wrapper button').addClass('invisible');    }}function add_check_list_in() {    let arr = $('.media-item input[type="checkbox"]:checked').parent();    let list = [];    $(arr).each(function(e,t) {        list.push({            name: $(t).text(),            src: '/DOWNLOAD/'+$(t).attr('data-sys'),            id: $(t).attr('data-id'),        });    });    let lst = {        'Воспроизвести': function() {            if(list.length > 0) {                let playlist = jplayer;                clear_play_list();                setTimeout(function() {                    for(let i of list) {                        addTrackToPlaylist(i.name, i.src, i.id);                    }                    setTimeout(function() {                        $('.jp-play').click();                        setTimeout(function() {                            playlist.play(0);                        }, 500);                    }, 100);                }, 300);            }            console.dir(list);        },        'В папку "Моя музыка"': function() {            add_arr_songs_in_folder(list);        }    };    if($('.yellow-border').length > 0) {        lst['В папку "'+$('.yellow-border > summary').text()+'"'] = function() {            add_arr_songs_in_folder(list, $('.yellow-border').attr('data-path'));        };    }    info_variants(undefined, lst);}function add_arr_songs_in_folder(lst, folder_path='Моя музыка') {    buffer_app = 'MUSIC';    save_map();    SENDER_APP('add_arr_songs_in_folder', {list: lst, folder_path: folder_path}, function(mess) {        mess_executer(mess, function(mess) {            update_tree_player();        });    });}/** * Удаляет массив треков из определённых папок * @param {Array.<{ *      id: number, *      folder_path} *      >} arr - Массив, который передаём * @param call_back - метод который будет выполнен при успешном удалении */function remove_arr_songs_from_folder(arr, call_back=function() {}) {    buffer_app = 'MUSIC';    save_map();    SENDER_APP('remove_arr_songs_from_folder', {list: arr}, function(mess) {        mess_executer(mess, function(mess) {            call_back();        });    });}function del_track(obj) {    let id = $(obj).closest('.music-item').attr('data-id');    let folder_path = $(obj).closest('.folder').attr('data-path');    remove_arr_songs_from_folder([{id: id, folder_path: folder_path}], function() {        $(obj).closest('.music-item').remove();    });}
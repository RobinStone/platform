mess_come = new Event();open_closed_chat = new Event();new_alert = new Event();connected_chat = new Event();let ws = null;SHA = '';ROOM = '';status_chat = 'off';current_room = 'self';bufer_transmission = {};let buff_id_mess = '';$(document).on('click', '.file-container', function(e) {    let src = $(this).attr('data-src');    $('#body-s').append('<div class="shore flex center"><img src="/DOWNLOAD/FILES_ROOMS/'+current_room+'/'+src+'" class="img-in-shore minimaze"></div>');});$(document).on('click', '.llist .btn', function(e) {    e.preventDefault();    e.stopPropagation();    let name_folder = $(this).closest('.audio-file').attr('data-name');    let tracks_ids = $(this).closest('.audio-file').attr('data-tracks').split(',');    buffer_app = 'MUSIC';    SENDER_APP('create_new_folder_with_tracks', {folder_path: name_folder, arr: tracks_ids}, function(mess) {        mess_executer(mess, function(mess) {            say('Импорт завершён.');            update_tree_player();            if(!$('#jp_container_1').hasClass('opener')) {                $('#jp_container_1').addClass('opener');            }            console.dir(mess);        });    });});$(document).on('click', 'div.shore', function(e) {    $(this).remove();});$(document).on('contextmenu', '.chat-m-content .chat-item.my:last-child', function(e) {    let obj = this;    let arr = $(this)    e.preventDefault();    let lst = {        'Удалить сообщение': function() {            send_com('del_last_mess');        },    }    info_variants(undefined, lst);});mess_come.subscribe(function(mess) {    if(typeof mess === 'object') {        switch(mess.type) {            case 'array':                console.dir(mess.body);                if($('div[data-window="array"]').length === 0) {                    create_window(transform_pos('center'), 'Сканер массива', function (mess) {                        $(mess).attr('data-window', 'array');                    });                } else {                    array_to_table($('div[data-window="array"]').find('.content'), mess.body);                }                break;            case 'alert':                console.log('NEW ALERT');                console.dir(mess);                new_alert.action(mess);                break;            case 'text':                if (typeof mess.body.text !== 'undefined') {                    $('.chat-m-content').append('<div>' + mess.body.text + '</div>');                    scroll_to_bottom($('.chat-m-content'));                }                break;            case 'answer':                console.dir(mess.text);                // $('.chat-m-content').append('<div class="chat-item"><div class="text-line">Look at console</div></div>');                if(typeof mess.text === 'string') {                    let comms = mess.text.split('|');                    if (comms.length > 1) {                        switch (comms[0]) {                            case 'cmd-ans':                                add_row(comms[1], 'lime');                                add_row();                                break;                            case 'ans':                                $('.chat-m-content div.my:last-child').remove();                                send_com('all reload');                                mess.text = '';                                break;                            case 'auto-update':                                $('button[data-room="'+current_room+'"]').click();                                mess.text = '';                                break;                            case 'error':                                say(comms[1], 3);                                break;                            case 'set_new_room':                                $('.chat-m-content').html('<div></div>');                                $('#message-m').val('>get_chat ' + comms[1]);                                $('.chat-sender-btn').click();                                console.log('set current room = ' + comms[1]);                                current_room = comms[1];                                bufer_transmission.room = current_room;                                if(typeof update_order_list !== 'undefined') {                                    update_order_list();                                }                                mess.text = '';                                break;                        }                    }                }                if(mess.text.length > 0) {                    // $('.chat-m-content').append('<div class="chat-item"><div class="text-line">' + mess.text + '</div></div>');                    scroll_to_bottom($('.chat-m-content'));                }                break;            case 'list':                decode_messages_list($('.chat-m-content'), mess.arr);                break;        }    }});function clear_messages_field() {    $('.chat-m-content').empty();}function decode_messages_list(target_obj, lst) {    let arr = [];    let accessory = 'my';    let first = '';    let time = '00:00';    for(let i in lst) {        arr = lst[i].split('~~');        if(arr[1] == user_id) { accessory = 'my'; } else { accessory = 'other'; }        if(buff_id_mess === arr[1]) {            first = 'not-first';        } else {            first = 'first';            buff_id_mess = arr[1];        }        time = arr[2].split(' ')[1].substr(0, 5);        if(arr[0] === '/IMG/img100x100/') { arr[0] = '/IMG/SYS/user.svg'; }        if(arr[4].includes('-->')) {            let exp = arr[4].split('|~|');            $(target_obj).append('<div data-code="'+lst[i]+'" class="chat-item '+ first +' '+accessory+' flex"><img src="'+arr[0]+'"><div class="text-line"><div data-src="'+exp[1]+'" class="file-container glex column"><img class="file-img" width="100" height="100" src="/DOWNLOAD/FILES_ROOMS/'+current_room+'/img100x100/'+exp[1]+'"><div>'+exp[2]+'</div></div><span class="time">'+time+'</span></div></div>');        } else if(arr[4].includes('++>audio(')) {            let name_folder = from_brackets(arr[4]);            let tracks = from_sqare_brackets(arr[4]);            $(target_obj).append('<div data-code="'+lst[i]+'" class="chat-item execute-code '+ first +' '+accessory+' flex"><img src="'+arr[0]+'"><div data-tracks="'+tracks+'" data-name="'+name_folder+'" class="text-line audio-file">'+name_folder+'<div class="rnb">Плейлист</div><span class="time">'+time+'</span></div></div>');        } else {            $(target_obj).append('<div data-code="'+lst[i]+'" class="chat-item '+ first +' '+accessory+' flex"><img src="'+arr[0]+'"><div class="text-line">'+arr[4]+'<span class="time">'+time+'</span></div></div>');        }    }    setTimeout(function() {        scroll_to_bottom($('.chat-m-content'));        analised_chat_execute();    }, 10);}function transmision(obj, room='self', hidden_start=false, product_code='') {    bufer_transmission = {        obj: obj,        room: room,        hidden_start: hidden_start,        product_code: product_code,    }    if($(obj).attr('data-status') === 'off') {        $(obj).attr('data-status', 'connectivity');        $('div.status').text('connectivity...');        SENDER('transmission', {room: room, product_code: product_code}, function (mess) {            mess = JSON.parse(mess);            if(mess.status === 'ok') {                $('div.status').text('ON-LINE');                if(hidden_start === false) {                    $('.chat-m-wrapper').addClass('show-field');                    open_closed_chat.action($('.chat-m-wrapper'));                }                SHA = mess.params.SHA;                ROOM = mess.params.ROOM;                console.dir(mess);                current_room = mess.params.ROOM;                ws = new WebSocket('wss://rumbra.ru:2346');                $(document).on('keydown', '#message-m', function (e) {                    if (e.keyCode === 13) {                        socket_send('text');                    }                });                ws.onopen = function (e) {                    console.log("Connection established");                    status_chat = 'visible';                    $(obj).attr('data-status', 'connected soc.php');                    let arr = {                        type: 'new',                        room: mess.params.ROOM,                        SHA: mess.params.SHA,                        body: {},                    };                    if(hidden_start === false) {                        $('.chat-m-wrapper').addClass('show-field');                    }                    // say(ws.readyState);                    ws.send(JSON.stringify(arr));                    connected_chat.action();                };                // stay_hidden.subscribe(function() {                //     ws.close();                // });                ws.onmessage = function (event) {                    let mess = JSON.parse(event.data);                    mess_come.action(mess);                };                ws.onclose = function (event) {                    status_chat = 'off';                    if (event.wasClean) {                        console.log(`Connection closed cleanly, code=${event.code} reason=${event.reason}`);                    } else {                        console.log('Connection unexpectedly closed');                        $('div.status').text('SERVER OFF');                        info_qest(transform_pos('center'), function() {                            location.reload();                        }, function() {                        }, 'Некоторое время система не получает сообщений от сервера.<br>Проверить сообщения?');                        $(obj).attr('data-status', 'off');                        $('.chat-m-wrapper').removeClass('show-field');                        $(obj).find('footer').addClass('disabled');                        open_closed_chat.action($('.chat-m-wrapper'));                    }                };                ws.onerror = function (error) {                    console.log(`Error: ${error.message}`);                };                function swipe_panel() {                    const scrollContainer = document.querySelector('.profil');                    scrollContainer.scrollTo({                        left: 6000,                        behavior: 'smooth'                    });                }                function mobile_back_row() {                    const scrollContainer = document.querySelector('.profil');                    scrollContainer.scrollTo({                        left: 0,                        behavior: 'smooth'                    });                }                function socket_send(type='text') {                    let arr = {                        type: type,                        room: mess.params.ROOM,                        SHA: mess.params.SHA,                        body: {},                    };                    switch(type) {                        case 'text':                            arr.body = {                                text: $('#message-m').val(),                            }                            break;                        default:                            say('Неизвестный тип. Установлено как - text', 3);                            arr.body = {                                text: $('#message-m').val(),                            }                            type = 'text';                            break;                    }                    console.dir(arr);                    // console.log('STATUS='+ws.readyState);                    if(arr.body.text !== '') {                        if(ws.readyState === WebSocket.OPEN) {                            ws.send(JSON.stringify(arr));                        } else {                            say('reload', 2);                            transmision(bufer_transmission.obj, bufer_transmission.room, bufer_transmission.hidden_start, bufer_transmission.product_code);                        }                    }                    setTimeout(function () {                        $('#message-m').val('');                    }, 10);                    $('#message-m').focus();                }                $(document).on('click', '.chat-sender-btn', function(e) {                    socket_send('text');                });            } else {                error_executing(mess);            }        });    } else {        if($(obj).attr('data-status') === 'connected') {            // $(obj).closest('.chat-m-wrapper').toggleClass('show-field');            open_closed_chat.action($(obj).closest('.chat-m-wrapper'));        }    }}function change_room(id_room) {    $('#message-m').val('>change '+id_room);    $('.chat-sender-btn').click();}function send_com(com) {    $('#message-m').val('>com '+com);    $('.chat-sender-btn').click();}function scroll_to_bottom(obj) {    let div = $(obj).get(0);    // let scrollHeight = div.scrollHeight;    // let scrollTop = div.scrollTop;    // let height = div.clientHeight;    // let distance = scrollHeight - scrollTop - height;    // let speed = 1; // скорость прокрутки (px/ms)    // let delay = 10; // задержка между шагами (ms)    //    // if (distance > 0) {    //     setTimeout(function() {    //         div.scrollTop += speed * delay;    //         scroll_to_bottom(obj);    //     }, delay);    // }    div.scrollTo({        top: 206000,        behavior: 'smooth'    });}function upload_file_from_chat() {    let upl = $('<form id="upl" style="display: none" name="uploader" enctype="multipart/form-data" method="POST">\n' +        '\t<input id="upload-form" name="userfile" type="file">\n' +        '</form>');    $('body').append(upl);    $('#upload-form').click();}$(document).on('change', '#upload-form', function() {    let file = this.files;    console.dir(file);    let cont = $('<div class="upload-cont-chat"></div>');    $('.chat-m-content').append(cont);    let arr = {        obj: cont,        edited: '1',        table_name: 'file',        column_name: 'chat',        id: -1,        params: current_room,    }    upload_chat_img(file[0], arr);    scroll_to_bottom($('.chat-m-content'));});function upload_chat_img(file, info_arr={}) {    // console.dir(info_arr);    let bar = document.getElementById('loader-indicate').content.cloneNode(true);    let count_ind = $('.circle-bar').length;    $(bar).find('.circle-bar').attr('data-ind', count_ind)    $(info_arr.obj).append(bar);    let circ = $(info_arr.obj).find('.circle-bar[data-ind="'+count_ind+'"]');    if(info_arr.edited !== '1') {        say('Данное поле закрыто от редактирования', 2);        $(info_arr.obj).find('.circle-bar').remove();        return false;    }    var ajax = new XMLHttpRequest();    ajax.upload.onprogress = function(event) {        console.log('Загружено ' + event.loaded + ' из ' + event.total);        console.log('loaded='+event.loaded);        let percent = 100 - Math.round(event.total - event.loaded) / event.total * 100;        percent = Math.round(percent);        console.log('Загрузка данных: '+percent+' %');        $(circ).find('.donut-segment').attr('stroke-dasharray', percent+' 100');        $(circ).find('.timer-value').text(percent);    };    ajax.onload = ajax.onerror = function() {        if (this.status === 200) {            console.log('All ok');        } else {            $('#progress').text('Ошибка');            say('Не удалось отправить файл');        }        // console.log('ОТВЕТ='+ajax.responseText);        console.log('===============================');        let mess = JSON.parse(ajax.response);        console.dir(mess);        if(mess.status !== 'ok') {            error_executing(mess);            $('tr .circle-bar').remove();        }        console.log('===============================');        if(mess.status === 'ok' || mess.status === 'clear') {            $(circ).toggleClass('circle-bar circle-bar-ok');            $(circ).find('.timer-value').text('Ok');            if($('.circle-bar').length === 0) {                $('.upload-cont-chat').remove();                let com = '-->file|~|'+mess.sys_name+'|~|'+mess.user_name;                $('#message-m').val(com);                $('.chat-sender-btn').click();            } else {                say('Файл загружен.<br>Ожидаем загрузку всех файлов...');            }        }    };    console.log('+++++++++++++++++++++++++');    console.dir(info_arr);    let formData = new FormData();    formData.append("userfile", file);    formData.append("com", 'files_rooms');   // вот тут команда для роутера на сохранение файлов    formData.append("table", info_arr.table_name);    formData.append("column", info_arr.column_name);    formData.append("params", info_arr.params);    formData.append("id", info_arr.id);    ajax.open("POST", domain, true);    ajax.responseType = 'text';    ajax.send(formData);}function array_to_table(obj, arr) {    let tbl = $('<table class="black-fone"></table>');    let tr = '';    for(let i in arr) {        tr = $('<tr><td>'+i+'</td><td>'+arr[i]+'</td></tr>');        $(tbl).append(tr);    }    $(obj).html(tbl);    // console.dir(arr);}function analised_chat_execute() {    $('.execute-code').each(function(e,t) {        if($(t).find('.audio-file').length > 0) {            $(t).removeClass('execute-code');            buffer_app = 'MUSIC';            SENDER_APP('get_tracks_from_id_arr', {'arr': $(t).find('.audio-file').attr('data-tracks').split(',')}, function(mess) {                mess_executer(mess, function(mess) {                    console.dir(mess);                    let pnl = $('<div class="llist"><div><button class="btn flex align-center between gap-15 action-btn">Добавить в плеер</button></div></div>');                    for(let i in mess.params) {                        $(pnl).append('<div class="flex gap-5">'+mess.params[i]['user_name']+'</div>');                    }                    $(t).find('.audio-file').append(pnl);                });            });        }    });}
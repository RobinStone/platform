$(document).on('input', '.delivery-field', function(e) {    scan_delivery_fields();});$(document).ready(function() {    fields_type('self');});function scan_delivery_fields() {    let enabled = true;    let btn = $('.delivery-form .btn-just');    $('.delivery-field').each(function(e,t) {        if($(t).val() === '' && !$(t).closest('fieldset').hasClass('invisible')) { enabled = false; }    });    setTimeout(function() {        if(enabled) {            btn.removeClass('disabled');        } else {            btn.addClass('disabled');        }    }, 100);}function swipe_panel() {    const scrollContainer = document.querySelector('.profil');    scrollContainer.scrollTo({        left: 6000,        behavior: 'smooth'    });}function mobile_back_row() {    const scrollContainer = document.querySelector('.profil');    scrollContainer.scrollTo({        left: 0,        behavior: 'smooth'    });}function calc() {}function buy() {    console.dir(basket);    let buy_arr = {        shop_id: shop_id,        products: [],        promocode: $('.promo input').val(),        type_pay: $('#type-pay').val(),        city: $('input[list="citys"]').val(),        obtaining: $('input[name="delivery"]:checked').val(),        comment: $('.backer textarea').val(),        total_summ: 0,    };    for(let i in basket) {        buy_arr.products.push(            {                product_id: basket[i]['product_id'],                count: basket[i]['COUNT'],            }        );        buy_arr['total_summ'] += parseFloat(basket[i]['COUNT']) * parseFloat(basket[i]['SHOP']['PRICE']);    }    console.dir(buy_arr);    switch(buy_arr['type_pay']) {        case 'со счёта':            if(cash >= buy_arr['total_summ']) {                info_qest(undefined, function () {                    buffer_app = 'SHOPS';                    SENDER_APP('buy', {arr: buy_arr}, function (mess) {                        mess_executer(mess, function (mess) {                            console.dir(mess);                            say('Успешно');                            location.href='/basket';                        })                    });                }, function () {                }, 'Подтвердите завершение оформления товаров, с использованием Вашего счёта на сайте на сумму <b style="white-space: nowrap">' + $('#fool-complite-total').text() + ' ?</b>', 'ДА', 'НЕТ');            } else {                say('На счету недостаточно средств!<br>Пополните счёт или выберете другой способ оплаты в поле №3 "Оплата"', 2);            }            break;        case 'card':            info_qest(undefined, function () {                buffer_app = 'SHOPS';                SENDER_APP('buy', {arr: buy_arr}, function (mess) {                    mess_executer(mess, function (mess) {                        console.dir(mess);                        say('Успешно');                        location.href='/basket';                    })                });            }, function () {            }, 'Подтвердите завершение оформления товаров, с использованием Вашей карты на сумму <b style="white-space: nowrap">' + $('#fool-complite-total').text() + ' ?</b>', 'ДА', 'НЕТ');            break;        case 'at_place':            break;        case 'courier':            break;    }}function delivery_settings() {    console.log('FORMER --- > '+$('#city-delivery').val());    open_popup('delivery_input', {city: $('#city-delivery').val()});}function save_delivery(obj) {    let arr = {};    $('.fields').each(function(e,t) {        arr[$(t).attr('name')] = $(t).val();    });    if(arr['fio'].length < 3 && !$('.form * input[name="fio"]').closest('fieldset').hasClass('invisible')) {        say('Поле ФИО должно содержать более трёх символов!..', 2);        return false;    }    let phone = decode_phone(arr['phone']);    if(phone.length < 7 && !$('.form *[name="phone"]').closest('fieldset').hasClass('invisible')) {        say('Поле Номер телефона должен быть реальным номером!..', 2);        return false;    } else {        arr['phone'] = phone;    }    if(arr['city'].length < 3 && !$('.form *[name="city"]').closest('fieldset').hasClass('invisible')) {        say('Пожалуйста введите коректное название города.', 2);        return false;    }    if(!$('.form *[name="address-dell"]').closest('fieldset').hasClass('invisible')) {        if(arr['address-dell'].length < 3) {            say('Пожалуйста введите коректный адрес, что бы доставка оказалась возможной.', 2);            return false;        }    }    setTimeout(function() {        SENDER('save_user_delivery_info', {user_info: arr}, function(mess) {            mess_executer(mess, function(mess) {                console.dir(mess);                close_popup('delivery_input');            })        });    }, 100);}function fields_type(type) {    switch(type) {        case 'self':            uplink([1,2,5]);            break;        case 'places':            uplink([2,5]);            break;        case 'courier':            uplink([1,2,3,4,5]);            break;    }}function uplink(arr) {    $('fieldset[data-num-id]').addClass('invisible');    for(let i in arr) {        $('fieldset[data-num-id="'+arr[i]+'"]').removeClass('invisible');    }}
buffer_app = null;    // переменная ответственная за работу функции SENDER_APP, именно она говорит в какой ajax передавать запрос из приложения// let error = new Error();// let stackTrace = error.stack.toString();// console.log(stackTrace);class APP {    load_app_in_content(name_app, content_obj, img_src = 'not-change') {        buffer_app = name_app;        $(content_obj).attr('data-name-app', name_app);        SENDER('get_app', {name: name_app}, function (mess) {            if (img_src !== 'not-change') {                create_logo_for_table($(content_obj).closest('.window'), img_src);            }            $(content_obj).html(mess);            if(typeof after_loader !== 'undefined') {                after_loader($(content_obj).closest('.window'));            }        });    }    app_update(name_app) {        buffer_app = name_app;        this.load_app_in_content(name_app, $('.content[data-name-app="' + name_app + '"]'));    }}apps = new APP();$(document).on('mouseenter', '.app-wrapper', function(e) {    buffer_app = $(this).find('h4 b').text();});function start_hidden_app(name, call_back=function(){}) {    let name_app = name;    let hiden_cont = $('<div style="display: none;"></div>');    buffer_app = name_app;    SENDER('get_app', {name: name_app}, function (mess) {        $(hiden_cont).html(mess);        $('#body').append(hiden_cont);        setTimeout(function () {            call_back();        }, 500);    });}$(document).on('click', '.app-start-btn', function(e) {    let obj = this;    let name_app = $(this).text();    let win = create_window(transform_pos('center', {x:0,y:0}), name_app);    $(win).closest('.window').addClass('app-wrapper');    $(win).closest('.window').find('.minimaze-btn').remove();    apps.load_app_in_content(name_app, win, $(obj).find('img').attr('src'));});
let comms = {};// 40 -down// 38 - up$(document).on('keydown', '#body', function(e) {    if(e.keyCode === 40) {        if($('.helper-item.sel').length === 0) {            $('.helper.visible .helper-item:first-child').addClass('sel');        } else {            let ind = parseInt($('.helper .helper-item.sel').attr('data-num'));            $('.helper-item.sel').removeClass('sel');            ++ind;            if(ind > $('.helper.visible .helper-item').length-1) {                ind = 0;            }            $('.helper.visible .helper-item:nth-child('+(ind+1)+')').addClass('sel');        }    }    if(e.keyCode === 38) {        if($('.helper-item.sel').length === 0) {            $('.helper.visible .helper-item:last-child').addClass('sel');        } else {            let ind = parseInt($('.helper .helper-item.sel').attr('data-num'));            $('.helper-item.sel').removeClass('sel');            --ind;            if(ind < 0) {                ind = $('.helper-item.sel').length-1;            }            $('.helper.visible .helper-item:nth-child('+(ind+1)+')').addClass('sel');        }    }});$(document).on('input', '.edit-string.setter', function(e) {    let hlp = $('.helper');    let txt = $(this).text();    let ans = [];    let f = 0;    for(let i in comms) {        if(txt !== '' && i.toLowerCase().includes(txt.toLowerCase())) {            ans.push($('<div data-num="'+(f++)+'" class="helper-item flex align-center gap-5"><span class="helper-main">'+i+'</span><span class="helper-descr">'+comms[i].descr+'</span></div>'));        }    }    if(ans.length > 0) {        $(hlp).empty();        for(let ii in ans) {            $(hlp).append(ans[ii]);        }        $(hlp).addClass('visible');    } else {        $(hlp).removeClass('visible');    }});$(document).on('click', '.CMD .content', function(e) {    e.stopPropagation();    e.preventDefault();    $('.setter').removeClass('setter');    $('.CMD .content').find('.edit-string:last-child').addClass('setter');    $('.CMD .content').find('.edit-string:last-child').focus();    $('.visible').removeClass('visible');});$(document).on('keydown', '.edit-string', function(e) {    let obj = this;    if(e.keyCode === 13) {        e.preventDefault();        e.stopPropagation();        if($('.helper.visible').length === 0 || $('.helper-item.sel').length === 0) {            $('.setter').removeClass('setter');            decode_com(obj, $(obj).text());        } else {            if($('.helper-item.sel').length > 0 && $('.edit-string.setter').length > 0) {                $('.edit-string.setter').text(encode_helper($('.helper-item.sel')));                $('.helper.visible').removeClass('visible');                $('.edit-string.setter').focus();                setEndOfContentEditable($('.edit-string.setter').get(0));            }        }    }});$(document).on('click', '.helper-item', function(e) {    let obj = this;    $('.edit-string.setter').text(encode_helper(obj));    $('.helper.visible').removeClass('visible');    $('.edit-string.setter').focus();    setEndOfContentEditable($('.edit-string.setter').get(0));});$(document).on('click', '.CMD .edit-string', function(e) {    let obj = this;    if($(obj).find('a')) {        $(obj).find('a').click();    } else {        e.stopPropagation();        e.preventDefault();        $('.setter').removeClass('setter');        $(this).addClass('setter');        $(this).find('.edit-string:last-child').focus();    }});function encode_helper(helper_text) {    let com = $(helper_text).find('span:first-child').text();    $('.window.table-focus.CMD h4 b').html('<div class="flex gap-10"><span>CMD</span><span style="font-weight: 100;">'+$(helper_text).find('span:last-child').text()+'</span></div>');    return com;}function add_row(txt='', color='#ffffff') {    if(txt === '') {        $('.setter').removeClass('setter');        $('.table-focus.CMD .content').append('<div class="edit-string setter" contenteditable="true">'+txt+'</div>');    } else {        $('.table-focus.CMD .content').append('<div class="edit-string setter" style="color: '+color+'">'+txt+'</div>');    }    $('.table-focus.CMD .content .edit-string').focus();}function add_error(txt) {    $('.table-focus.CMD .content').append('<div style="color: violet" class="edit-string">'+txt+'</div>');}function add_warn(txt) {    $('.table-focus.CMD .content').append('<div style="color: yellow" class="edit-string">'+txt+'</div>');}function add_mess(txt) {    $('.table-focus.CMD .content').append('<div style="color: lime; font-style: italic" class="edit-string">'+txt+'</div>');}function decode_com(obj, com) {    let cont = '';    if(obj !== null) {        cont = $(obj).closest('.content');    }    let arm = com.split(' ');    switch(arm[0]) {        case 'sys':            if(arm.length === 1) {                system_send({type: 'global', com: 'echo'});            } else {            }            break;        case 'cls':            $('.table-focus.CMD .content').empty();            add_row();            break;        case 'clear_connections':            send_com('clear_bed_connections');            add_row('processing...');            break;        case 'cycle':            let count_i = 50;            if(arm.length === 3) { count_i = parseInt(arm[2]); }            let com2 = '>add_in_stack 0~~'+count_i+'~~cycle|~|'+arm[1]+'~~2~~data';            // let com = '>add_in_stack 0~~'+parseInt(count)+'~~get_all_connected~~2~~data';            $('#message-m').val(com2);            $('.chat-sender-btn').click();            add_row();            break;        case 'com':            let com3 = '>'+com;            $('#message-m').val(com3);            $('.chat-sender-btn').click();            add_row();            break;        case 'listener':            let count = 1;            if(arm.length === 2) {                count = parseInt(arm[1]);            }            hu_in_chat(count);            add_row('ok listener started...');            add_row();            break;        case 'quit':            $('.table-focus.CMD').remove();            break;        case 'dir':            let ans = [];            for(let i in comms) {                ans.push('<div><span style="font-weight: 600; color: lime; padding-right: 5px; display: inline-block">'+i+'</span><span style="font-size: 14px; font-style: italic; color: #fff">'+comms[i]['descr']+'</span></div>');            }            add_row(ans.join(' '));            add_row();            break;        default:            SENDER('cmd', {cmd: com}, function(mess) {                mess = JSON.parse(mess);                if(mess.status === 'ok') {                    switch(mess.body) {                        case 'titles':                            console.dir(mess.params);                            comms = mess.params;                            add_mess('CMD running...');                            add_row();                            break;                        case 'text':                            let ans = [];                            for(let i in mess.params) {                                ans.push('<div><span style="padding-right: 5px; display: inline-block; color: lime">'+i+'</span><span>'+mess.params[i]+'</span></div>');                            }                            add_row(ans.join(' '));                            add_row();                            break;                        case 'string':                            add_mess(mess.params);                            add_row();                            break;                        default:                            add_mess(mess.body);                            break;                    }                } else {                    add_error(mess.body);                    add_row();                }            });            break;    }    $('.helper.visible').removeClass('visible');}function setEndOfContentEditable(contentEditableElement){    var range, selection;    if (document.createRange) // all browsers, except IE before version 9    {        range = document.createRange();// create new range object        range.selectNodeContents(contentEditableElement);// set range to encompass the entire element        range.collapse(false);// collapse the range to the end point. false means collapse to end rather than the start        selection = window.getSelection();// get the current selection object        selection.removeAllRanges();// remove any selections already made        selection.addRange(range);// add the new range to the selection object    }    else if (document.body.createTextRange) // IE, create new range object    {        range = document.body.createTextRange();//creates new text range object        range.moveToElementText(contentEditableElement);//set range to encompass the entire element        range.collapse(false);//collapse range to end point        range.select();//make range the visible selection    }}
<?phpclass SUPPORT {    public static function get_all_unanswered_supports(): array {        $ans = [];        $alerts = SQL_ROWS_FIELD(q("        SELECT rooms.room_id AS ROOM, alerts.datatime FROM rooms         LEFT JOIN alerts ON        rooms.room_id = alerts.room_id WHERE        rooms.type = 'support' AND        alerts.showed = 0 ORDER BY alerts.datatime DESC        "), 'datatime');        if(count($alerts) > 0) {            $RED = new REDISE();            $tim = time();            foreach ($alerts as $k=>$v) {                $arr = $RED->chanal_last_mess($v['ROOM'], 1, 0);                if(count($arr) >= 1) {                    $v['LAST'] = explode('~~', $arr[0])[3];                    $mins = round(($tim - strtotime($v['datatime'])) / 60);                    $v['minuts'] = $mins;                    if($mins < 60) {                        $v['WAIT'] = $mins."мин. назад";                    } else {                        $v['WAIT'] = round($mins/60)."ч. ".($mins % 60)."мин. назад";                    }                    $ans[$k] = $v;                }            }        }        return $ans;    }    public static function render_menu_support($array=[]) {        ob_start(); ?>        <div class="support-list-block" style="position: relative">               <?               $not_vis = "";               if(count($array) <= 0) {                   $not_vis = "display: none;";               }               echo '<button onclick="show_hidden_list_support()" class="mess-alert btn-gray btn-gray-text not-border micro-btn"><span class=""><img width="25" height="25" src="/DOWNLOAD/20230505-205805_id-2-854894.svg"></span><span class="counter-mess" style="'.$not_vis.'">'.count($array).'</span></button>';               echo '<div class="support-list hidden-list">';               foreach($array as $v) {                   echo '<button class="action-btn" onclick="activate_support_room(this, \''.$v['ROOM'].'\')">'.$v['LAST'].'<span>'.$v['WAIT'].'</span></button>';               }                   echo '</div>';               ?>           </div> <?        echo ob_get_clean();    }    public static function render_support_script() {        ob_start(); ?>        <script>            function activate_support_room(obj, id_room) {                if(!$('.chat-m-wrapper').is(':visible')) {                    chat_activator();                    sys_com('change', id_room);                    scroll_to_bottom($('.chat-m-content'));                    $('.chat-m-wrapper').css('left', window.innerWidth/2 + 'px').css('top', window.innerHeight/2 + 'px');                } else {                    sys_com('change', id_room);                    scroll_to_bottom($('.chat-m-content'));                }                SENDER('note_message_of_support', {id_room: id_room}, function(mess) {                });                $(obj).remove();                show_hidden_list_support();                set_count_support_messages($('.support-list .action-btn').length);            }            function show_hidden_list_support() {                $('.support-list').toggleClass('hidden-list');                if(!$('.support-list').hasClass('hidden-list')) {                }            }            function set_count_support_messages(count=0) {                $('.counter-mess').text(count);                if(count > 0) {                    $('.counter-mess').css('display', 'flex');                } else {                    $('.counter-mess').css('display', 'none');                }            }            new_alert.subscribe(function(mess) {                console.dir(mess);                if(typeof mess.call !== 'undefined' && mess.call === 'support') {                    SENDER('get_support_notes_btns', {}, function(mess) {                        $('#menu-support').html(mess);                    });                }            });        </script>        <? echo ob_get_clean();    }}
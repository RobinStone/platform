<?phpclass FILER {    function __construct() {    }    /**     * На вход необходимо подать либо одно системное имя файла или массив из имён     * на выходе получим массив     *     * @param string|array $sys_name Системное имя файла или массив из имён     */    public static function delete(string|array $sys_name):array {        $ans = [            'status'=>'clear',            'text'=>'Пусто',            'resurs'=>[]        ];        $arr = [];        if(!is_array($sys_name)) {            $arr[] = $sys_name;        } else {            $arr = $sys_name;        }        if(count($arr) <= 0) {            Message::addError('Не передано ни одного файла...');            return [                    'status'=>'error',                    'text'=>'Не передано ни одного файла...',                    'resurs'=>[]            ];        }        foreach($arr as $k=>$v) {            $arr[$k] = "'".db_secur($v)."'";        }        $rows = SQL_ROWS(q("SELECT * FROM `file` WHERE `sys_name` IN (".implode(',',$arr).") "));        if(count($rows) > 0) {            $del_ids = [];            $undels = [];            $dels = [];            foreach($rows as $v) {                if($v['sys'] === '1') {                    unlink('./DOWNLOAD/' . $v['sys_name']);                    if ($v['type'] === 'image') {                        unlink('./IMG/img100x100/' . $v['sys_name']);                        unlink('./IMG/img300x300/' . $v['sys_name']);                    }                    $del_ids[] = (int)$v['id'];                    $dels[$v['id']] = [                            'sys_name'=>$v['sys_name'],                            'user_name'=>$v['user_name']                    ];                } else {                    $undels[$v['id']] = [                        'sys_name'=>$v['sys_name'],                        'user_name'=>$v['user_name']                    ];                }            }            if(count($del_ids) > 0) {                q("DELETE FROM `file` WHERE `id` IN (".implode(',', $del_ids).") ");                return [                        'status'=>'ok',                        'text'=>'',                        'resurs'=> [                             'deleted'=> $dels,                             'undeleted'=>$undels                        ]                ];            }            return [                    'status'=>'error',                    'text'=>'Система не удалила ни одного файла, возможно они помечены как SYS',                    'resurs'=> [                            'deleted'=> $dels,                            'undeleted'=>$undels                    ]            ];        } else {            return [                'status'=>'error',                'text'=>'В БД не было найдено найдено ни одного файла...',                'resurs'=>[]            ];        }    }    public static function get_visual_gallery_list($render_folders=false, $only_self=true): bool|array|string {        $only = " AND `owner`=".Access::userID()." ";        if($only_self === false) {            $only = "";        }        $rows = SQL_ROWS_FIELD(q("SELECT * FROM `file` WHERE `type`='image' ".$only), 'id');        $rows = SORT::array_sort_by_column($rows, 'id', SORT_DESC);        if($render_folders) {            ob_start(); ?>            <style>                .gallery-list {                    position: rel;                    display: flex;                    gap: 5px;                    padding: 3px;                    flex-wrap: wrap;                    overflow-y: auto;                    background-color: #ffffff;                }                .gallery-item {                    display: flex;                    position: relative;                    flex-direction: column;                    gap: 3px;                    width: 100px;                    aspect-ratio: 1;                    background-color: rgb(255, 255, 255);                    outline: 1px solid rgb(100, 149, 237);                }                .gallery-item img {                    display: inline-block;                    width: 100px;                    height: 100px;                    object-fit: contain;                    background-color: #ffffff;                }                .gallery-item .lock {                    display: inline-block;                    position: absolute;                    pointer-events: none;                    top: 4px;                    left: unset;                    right: 3px;                    width: 20px;                    height: 20px;                    overflow: hidden;                    background: none;                    padding: 0;                }                .gallery-item .lock img {                    display: inline-block;                    width: 20px;                    height: 20px;                    object-fit: contain;                    background: none;                }                .gallery-item span {                    position: absolute;                    width: 100%;                    left: 0;                    bottom: 0;                    padding: 3px 5px;                    display: inline-block;                    background-color: rgba(255, 255, 255, 0.88);                    color: #000000;                    font-size: 12px;                    line-height: 12px;                    max-height: 28px;                    overflow-y: auto;                    word-break: break-all;                }            </style>            <div class="flex flex-wrap gap-5 img-header" style="padding: 2px 5px; justify-content: right">                <label class="flex align-center gap-5" style="margin-right: auto; cursor: pointer">                    <input id="all-imgs" type="checkbox">                    <span style="font-size: 13px">Показать все</span>                </label>                <button onclick="load_img()" class="btn-gray btn-gray-text not-border micro-btn btn-img-with-text ">                    <img width="20" height="20" src="/DOWNLOAD/20231219-133104_id-2-465284.svg">                    <span>Загрузить</span>                </button>                <button onclick="finder_img()" class="btn-gray btn-gray-text not-border micro-btn btn-img-with-text ">                    <img width="20" height="20" src="/DOWNLOAD/20231214-205226_id-2-169233.svg">                    <span>Найти</span>                </button>                <button onclick="update_gallery(this)" class="btn-gray btn-gray-text not-border micro-btn btn-img-with-text ">                    <img width="20" height="20" src="/DOWNLOAD/20231204-130112_id-2-713791.svg">                    <span>Обновить</span>                </button>            </div>            <?php            echo '<ul class="gallery-list upload-zone">';            foreach($rows as $k=>$v) { ?>                <li draggable="true" data-id="<?=$v['id']?>" data-user-name="<?=$v['user_name']?>" data-sys-name="<?=$v['sys_name']?>" data-sys="<?=$v['sys']?>" class="gallery-item">                    <img loading="lazy" width="100" height="100" src="/IMG/img100x100/<?=$v['sys_name']?>">                    <?php if($v['sys'] == '0') {                        echo '<span class="lock"><img width="15" height="15" src="/DOWNLOAD/20231203-201600_id-2-202069.svg"></span>';                    } ?>                    <span><?=$v['user_name']?></span>                </li>            <?php }            echo '</ul>'; ?>            <script>                $(document).on('dragstart', '.gallery-item', function(e) {                    let obj = this;                    buffer_file_name = $(obj).attr('data-sys-name');                    buffer_donor_cell = 'GALLERY';                });                $(document).on('dblclick', '.gallery-list li', function(e) {                    let obj = this;                    let sys_name = $(obj).attr('data-sys-name');                    copyToClipboard(sys_name);                    say("[ <b>"+sys_name+"</b> ] - скопировано<br>Для вставки: CTRL + V");                });                function update_gallery(obj) {                    let cont = $(obj).closest('.content');                    let all_imgs = $('#all-imgs').prop('checked');                    SENDER('get_visual_gallery_list', {}, function(mess) {                        mess_executer(mess, function(mess) {                            console.dir(mess);                            $(cont).empty();                            $(cont).append(mess.params)                        });                    });                }                function finder_img() {                    info_inputString(undefined, function(e) {                        $('.gallery-list').empty();                        $('.gallery-list').html('<img style="display: inline-block; width: 100%; height: 100%; object-fit: contain" src="/DOWNLOAD/'+bufferText+'" width="300" height="300">');                        $('.window').addClass('table-focus');                    }, 'Введите системное имя картинки:', '');                }                function load_img() {                    $('#general-input-file').click();                }            </script>            <?php return ob_get_clean();        } else {            return $rows;        }    }}
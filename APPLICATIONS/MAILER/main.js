buffer_Obj_m = null;let mem_m = [];let mem_id = 0;let type_list = 'email';$(document).on('contextmenu', 'div#mail *', function(e) {    console.log(this);    e.preventDefault();    e.stopPropagation();    exe_node(this);});$(document).on('dragover', '#mail td', function(e) {    e.preventDefault();    e.stopPropagation();});$(document).on('drop', '#mail td', function(e) {    let obj = this;    e.preventDefault();    e.stopPropagation();    console.dir(obj_cell);    if(obj_cell.type === 'file') {        let name = $(obj_cell.obj[0]).find('img').attr('data-name');        let exp = name.split('.')[name.split('.').length-1].toLowerCase();        let access = ['jpeg', 'jpg', 'png', 'webp', 'svg',  'gif'];        if(access.includes(exp)) {            let img = $('<img src="'+domain+'DOWNLOAD/'+name+'" width="150" height="150">');            $(obj).html(img);        }    }});$(document).on('dblclick', '#mail', function(e) {    e.preventDefault();    e.stopPropagation();    sellector();});$(document).on('enter', '#emails-list', function(e) {    say('enter');    type_list = 'email';});$(document).on('paste', '#emails-list', function(e) {    let obj = this;    setTimeout(function() {        let lst = $(obj).val().split(',');        if(lst.length > 0) {            type_list = 'id';            $(obj).val(lst.join("\r\n"));            say('Рассылка по ID<br>Шаблоны писем будут изменены<br>в соответствии с целевым ID');        } else {            type_list = 'email';            say('Рассылка по списку из Email');        }    }, 1);});// $(document).on('contextmenu', 'td', function(e) {//     e.preventDefault();//     e.stopPropagation();//     console.log(this.parentNode);//     console.log('-----------------------');//     console.log(this);//// });function exe_node(obj) {    let self_ = obj;    let parent_ = obj.parentNode;    let global_ = obj.parentElement.parentElement;    let doc_ = obj.parentElement.parentElement.parentElement;    function get_tag(NAME) {        if(obj.nodeName === NAME) { return self_; }        if(obj.parentNode.nodeName === NAME) { return parent_; }        if(obj.parentElement.parentElement.nodeName === NAME) { return global_; }        if(obj.parentElement.parentElement.parentElement.nodeName === NAME) { return doc_; }        return false;    }    let arr = [];    let lst = {    };    arr.push(obj.nodeName);    arr.push(obj.parentNode.nodeName);    arr.push(obj.parentElement.parentElement.nodeName);    arr.push(obj.parentElement.parentElement.parentElement.nodeName);    for(let i in arr){        console.log(arr[i]);        switch(arr[i]) {            case 'SPAN':            case 'P':                lst['Атрибуты (только выделенный текст)'] = function() {                    let llist = {                        'Убрать всё': function() {                            atributer('clear');                        },                        'Зачеркнуть': function() {                            atributer('del');                        },                        'Подчеркнуть': function() {                            atributer('underline');                        },                        'Жирный': function() {                            atributer('bold');                        },                        'Наклонный': function() {                            atributer('italic');                        },                        'Размер': function() {                            let lloid = {                                '10px': function() {                                    atributer('fontsize', '10px');                                },                                '12px': function() {                                    atributer('fontsize', '12px');                                },                                '14px': function() {                                    atributer('fontsize', '14px');                                },                                '16px': function() {                                    atributer('fontsize', '16px');                                },                                '18px': function() {                                    atributer('fontsize', '18px');                                },                                '20px': function() {                                    atributer('fontsize', '20px');                                },                                '22px': function() {                                    atributer('fontsize', '22px');                                },                                '24px': function() {                                    atributer('fontsize', '24px');                                },                                '26px': function() {                                    atributer('fontsize', '26px');                                },                                '2em': function() {                                    atributer('fontsize', '2em');                                },                                '3em': function() {                                    atributer('fontsize', '3em');                                },                            };                            info_variants(undefined, lloid, 'Размер шрифта');                        },                        'Цвет': function() {                            buffer_range = window.getSelection().getRangeAt(0);                            let colaur = $('<div id="color-panel" style="position: absolute; right: 5px; top: 80px;" class="flex column"><input id="color-box" style="display: inline-block; right: 5px; top: 5px; width: 120px; height: 120px" type="color"><input id="ranger" style="display: inline-block; width: 120px; height: 10px; margin-top: 4px; cursor: pointer;" onchange="changer_alpha(this)" value="255" type="range" step="1" min="0" max="255"><div><button onclick="change_color(\'fontcolor\')">ok</button><button onclick="this.parentElement.parentElement.remove()">❌</button></div></div>');                            $('#item-4').append(colaur);                        },                        'Шрифт': function() {                            let llist = {                                'Helvetica, arial, sans-serif': function() {                                    atributer('fontname', "Helvetica, arial, sans-serif");                                },                                'Times New Roman, arial, sass-serif': function() {                                    atributer('fontname', "Times New Roman, arial, sans-serif");                                },                                'Georgia, Times, Times New Roman, serif': function() {                                    atributer('fontname', "Georgia, Times, Times New Roman, serif");                                },                            };                            info_variants(undefined, llist, 'Шрифт');                        },                        'Выравнивание': function() {                            let llist = {                                'Слева': function() {                                    atributer('align', 'left');                                },                                'По центру': function() {                                    atributer('align', 'center');                                },                                'Справа': function() {                                    atributer('align', 'right');                                },                            };                            info_variants(undefined, llist, 'Параметры ячейки<br>Выравнивание');                        },                    };                    info_variants(undefined, llist, 'Атрибуты')                };                break;            case 'TD':                // lst['Параметры текста'] = function() {                //     let llist = {                //         'Размер': function() {                //             info_inputString(undefined, function() {                //                 if(get_tag('P') !== false) {                //                     save_mem();                //                     get_tag('P').style.fontSize = bufferText;                //                 } else {                //                     save_mem();                //                     get_tag('TD').style.fontSize = bufferText;                //                 }                //             }, 'Введите ширину с указанием<br>размерностей напр. 30px или 2em', '2em');                //         },                //         'Стиль': function() {                //             let we = {                //                 'Нормальный': function() {                //                     save_mem();                //                     get_tag('TD').style.fontStyle = 'normal';                //                 },                //                 'Курсив': function() {                //                     save_mem();                //                     get_tag('TD').style.fontStyle = 'italic';                //                 },                //             };                //             info_variants(undefined, we, 'Параметры текста<br>Стиль');                //         },                //         'Начертание': function() {                //             let we = {                //             'Лёгкий': function() {                //                 save_mem();                //                 get_tag('TD').style.fontWeight = '100';                //                 },                //                 'Средний': function() {                //                     save_mem();                //                     get_tag('TD').style.fontWeight = '400';                //                 },                //                 'Тяжёлый': function() {                //                     save_mem();                //                     get_tag('TD').style.fontWeight = '900';                //                 },                //             };                //             info_variants(undefined, we, 'Параметры текста<br>Начертание');                //         },                //         'Цвет': function() {                //             if(get_tag('A') !== false) {                //                 buffer_obj = get_tag('A');                //             } else {                //                 buffer_obj = get_tag('TD');                //             }                //             let colaur = $('<div id="color-panel" style="position: absolute; right: 5px; top: 80px;" class="flex column"><input id="color-box" style="display: inline-block; right: 5px; top: 5px; width: 120px; height: 120px" type="color"><input id="ranger" style="display: inline-block; width: 120px; height: 10px; margin-top: 4px; cursor: pointer;" onchange="changer_alpha(this)" value="255" type="range" step="1" min="0" max="255"><div><button onclick="change_color(\'text\')">ok</button><button onclick="this.parentElement.parentElement.remove()">❌</button></div></div>');                //             $('#item-4').append(colaur);                //         },                //     };                //     info_variants(undefined, llist, 'Текст');                // };                lst['Ссылки'] = function() {                    let td = get_tag('TD');                    let addr = 'https://google.com';                    info_inputString(undefined, function() {                        let link = document.createElement('a');                        link.setAttribute('href', bufferText);                        if(obj.nodeName === 'TD') {                            save_mem();                            link.innerText = get_tag('TD').innerText;                            get_tag('TD').innerText = '';                            td.appendChild(link);                        } else {                            if(get_tag('A') !== false) {                                save_mem();                                addr = get_tag('A').getAttribute('href');                                get_tag('A').setAttribute('href', bufferText);                            } else {                                save_mem();                                let val = get_tag('TD').firstChild;                                get_tag('TD').innerText = '';                                link.appendChild(val);                                td.appendChild(link);                            }                        }                    }, 'Введите адрес перехода:', addr);                };                lst['Добавить ячейку'] = function() {                    info_qest(undefined, function() {                        save_mem();                        let new_cell = document.createElement('TD');                        new_cell.style.padding = '10px';                        new_cell.innerHTML = '<p>Новая ячейка</p>';                        get_tag('TR').insertBefore(new_cell, get_tag('TD'));                    }, function() {                        let new_cell = document.createElement('TD');                        save_mem();                        new_cell.style.padding = '10px';                        new_cell.innerHTML = '<p>Новая ячейка</p>';                        get_tag('TR').insertBefore(new_cell, null);                    }, 'Слева или справа?', 'Слева', 'Справа');                };                lst['Вставить картинку'] = function() {                    let obj = get_tag('TD');                    let llist = {                        'Выбрать из галереи': function() {                            open_table('file', undefined);                        },                        'Вставить ссылку на изображение': function() {                            info_inputString(undefined, function() {                                save_mem();                                obj.innerHTML = '<img style="width: 70px" src="'+bufferText+'">';                            }, 'Вставьте полную ссылку<br>напр. https://pictures/pic.png');                        },                        'Вставить код на подстановку': function() {                            info_inputString(undefined, function() {                                save_mem();                                obj.innerHTML = '<img style="width: 70px" src="'+bufferText+'">';                            }, 'Вставьте код вида !!users.self.img!!');                        }                    };                    info_variants(undefined, llist, 'Контент');                };                lst['Вставить контейнер в эту ячейку'] = function() {                    save_mem();                    let new_tbl = document.createElement('TABLE');                    new_tbl.innerHTML = '<tbody><tr><td style="padding: 10px"><p>Новый контейнер строка и ячейка</p></td></tr></tbody>';                    let td = get_tag('TD');                    td.innerHTML = '';                    td.appendChild(new_tbl);                };                lst['Ячейки'] = function() {                    let amd = {                        'Удалить ячейку': function() {                            save_mem();                            get_tag('TD').remove();                        },                        'Очистить ячейку': function() {                            save_mem();                            get_tag('TD').innerHTML = '';                        },                        'Размер (ширина/высота)': function() {                            let llist = {                                'Ширина': function() {                                    info_inputString(undefined, function() {                                        save_mem();                                        get_tag('TD').setAttribute('width', bufferText);                                    }, 'Введите ширину с указанием размерности<br>напр. 120px или 10%');                                },                                'Высота': function() {                                    info_inputString(undefined, function() {                                        save_mem();                                        get_tag('TD').setAttribute('height', bufferText);                                    }, 'Введите высоту с указанием размерности<br>напр. 120px или 10%');                                },                                'Удалить все размеры': function() {                                    save_mem();                                    get_tag('TD').setAttribute('width', '');                                    get_tag('TD').setAttribute('height', '');                                },                            };                            info_variants(undefined, llist, 'Параметры ячейки<br>Выравнивание');                        },                        'Цвет фона': function() {                            buffer_Obj_m = get_tag('TD');                            let colaur = $('<div id="color-panel" style="position: absolute; right: 5px;" class="flex column"><input id="color-box" style="display: inline-block; right: 5px; top: 5px; width: 120px; height: 120px" type="color"><input id="ranger" style="display: inline-block; width: 120px; height: 10px; margin-top: 4px; cursor: pointer;" onchange="changer_alpha(this)" value="255" type="range" step="1" min="0" max="255"><div><button onclick="change_color(\'cell\')">ok</button><button onclick="this.parentElement.parentElement.remove()">❌</button></div></div>');                            $('#item-4').append(colaur);                        },                        'Изображение фона': function() {                            buffer_Obj_m = get_tag('TD');                            let llist = {                                'Выбрать из галереи': function() {                                    open_table('file', undefined);                                },                                'Вставить ссылку на изображение': function() {                                    info_inputString(undefined, function() {                                        save_mem();                                        obj.innerHTML = '<img style="width: 70px" src="'+bufferText+'">';                                    }, 'Вставьте полную ссылку<br>напр. https://pictures/pic.png');                                },                            };                            info_variants(undefined, llist, 'Фон (изображение)');                        },                        'Параметры изображения фона': function() {                            let llist = {                                'Замостить': function() {                                    save_mem();                                    get_tag('TD').style.backgroundRepeat = 'repeat';                                    get_tag('TD').style.position = '';                                    get_tag('TD').style.backgroundPosition = '';                                },                                'Растянуть': function() {                                    save_mem();                                    get_tag('TD').style.backgroundRepeat = 'no-repeat';                                    get_tag('TD').style.backgroundSize = '100% 100%';                                },                                'По центру': function() {                                    save_mem();                                    get_tag('TD').style.backgroundRepeat = 'no-repeat';                                    get_tag('TD').style.backgroundSize = 'cover';                                    get_tag('TD').style.backgroundPosition = 'center';                                },                                'Вместить': function() {                                    save_mem();                                    get_tag('TD').style.backgroundRepeat = 'no-repeat';                                    get_tag('TD').style.backgroundSize = 'contain';                                    get_tag('TD').style.backgroundPosition = 'center';                                },                            };                            info_variants(undefined, llist, 'Параметры изображения фона');                        },                        'Скругления':function() {                            info_inputString(undefined, function() {                                let orb = {                                    'Вверху слева': function() {                                        save_mem();                                        get_tag('TD').style.borderTopLeftRadius = bufferText;                                        get_tag('TD').style.overflow = 'hidden';                                    },                                    'Вверху Справа': function() {                                        save_mem();                                        get_tag('TD').style.borderTopRightRadius = bufferText;                                        get_tag('TD').style.overflow = 'hidden';                                    },                                    'Внизу Справа': function() {                                        save_mem();                                        get_tag('TD').style.borderBottomRightRadius = bufferText;                                        get_tag('TD').style.overflow = 'hidden';                                    },                                    'Внизу Слева': function() {                                        save_mem();                                        get_tag('TD').style.borderBottomLeftRadius = bufferText;                                        get_tag('TD').style.overflow = 'hidden';                                    },                                    'Везде': function() {                                        save_mem();                                        get_tag('TD').style.borderTopLeftRadius = bufferText;                                        get_tag('TD').style.borderTopRightRadius = bufferText;                                        get_tag('TD').style.borderBottomRightRadius = bufferText;                                        get_tag('TD').style.borderBottomLeftRadius = bufferText;                                        get_tag('TD').style.overflow = 'hidden';                                    },                                };                                info_variants(undefined, orb, 'Параметры ячейки<br>Отступы');                            }, 'Введите значение<br>и название величлны<br>напр. 20px или 50%', '50%');                        },                        'Объединить ячейки': function() {                            info_inputString(undefined, function() {                                save_mem();                                get_tag('TD').setAttribute('colspan', parseInt(bufferText).toString());                            }, 'Сколько колонок<br>будет занимать эта<br>ячейка?', '1');                        },                        'Выравнивание': function() {                            let llist = {                                'Слева': function() {                                    save_mem();                                    get_tag('TD').setAttribute('align', 'left');                                },                                'По центру': function() {                                    save_mem();                                    get_tag('TD').setAttribute('align', 'center');                                },                                'Справа': function() {                                    save_mem();                                    get_tag('TD').setAttribute('align', 'right');                                },                            };                            info_variants(undefined, llist, 'Параметры ячейки<br>Выравнивание');                        },                        'Верикальное выравнивание': function() {                            let llist = {                                'По верху': function() {                                    save_mem();                                    get_tag('TD').setAttribute('valign', 'top');                                },                                'По центру': function() {                                    save_mem();                                    get_tag('TD').setAttribute('valign', 'center');                                },                                'По ннизу': function() {                                    save_mem();                                    get_tag('TD').setAttribute('valign', 'bottom');                                },                            };                            info_variants(undefined, llist, 'Параметры ячейки<br>Выравнивание');                        },                        'Отступы': function() {                            info_inputString(undefined, function() {                                let orb = {                                    'Вверху': function() {                                        save_mem();                                        get_tag('TD').style.paddingTop = bufferText;                                    },                                    'Справа': function() {                                        save_mem();                                        get_tag('TD').style.paddingRight = bufferText;                                    },                                    'Внизу': function() {                                        save_mem();                                        get_tag('TD').style.paddingBottom = bufferText;                                    },                                    'Слева': function() {                                        save_mem();                                        get_tag('TD').style.paddingLeft = bufferText;                                    },                                    'Везде': function() {                                        save_mem();                                        get_tag('TD').style.paddingTop = bufferText;                                        get_tag('TD').style.paddingRight = bufferText;                                        get_tag('TD').style.paddingBottom = bufferText;                                        get_tag('TD').style.paddingLeft = bufferText;                                    },                                };                                info_variants(undefined, orb, 'Параметры ячейки<br>Отступы');                            }, 'Введите значение<br>и название величлны<br>напр. 20px или em', '10px');                        },                        'Удалить все атрибуты ячейки': function() {                            save_mem();                            removeAllAttrs(get_tag('TD'));                        },                    };                    info_variants(undefined, amd, 'Параметры ячейки');                };                break;            case 'IMG':                lst['Параметры изображения'] = function() {                    let arrm = {                        '↔ Ширина': function() {                            info_inputString(undefined, function() {                                save_mem();                                get_tag('IMG').style.width = bufferText;                            }, 'Введите ширину с указанием<br>размерностей напр. 120px или 80%', '100%');                        },                        '↕ Высота': function() {                            info_inputString(undefined, function() {                                save_mem();                                get_tag('IMG').style.height = bufferText;                            }, 'Введите высоту с указанием<br>размерностей напр. 120px или 80%', '130px');                        },                        '⇗ Смещение': function() {                            let lst = {                                '⇧ Вверх': function() {                                    info_inputString(undefined, function() {                                        save_mem();                                        get_tag('IMG').style.marginTop = '-'+bufferText;                                    }, 'Введите просто число', '50');                                },                                '⇨ Вправо': function() {                                    info_inputString(undefined, function() {                                        save_mem();                                        get_tag('IMG').style.marginRight = '-'+bufferText;                                    }, 'Введите просто число', '50');                                },                                '⇩ Вниз': function() {                                    info_inputString(undefined, function() {                                        save_mem();                                        get_tag('IMG').style.marginBottom = '-'+bufferText;                                    }, 'Введите просто число', '50');                                },                                '⇦ Влево': function() {                                    info_inputString(undefined, function() {                                        save_mem();                                        get_tag('IMG').style.marginLeft = '-'+bufferText;                                    }, 'Введите просто число', '50');                                },                                '❌ Сбросить все смещения': function() {                                    save_mem();                                    get_tag('IMG').style.marginTop = '';                                    get_tag('IMG').style.marginBottom = '';                                    get_tag('IMG').style.marginRight = '';                                    get_tag('IMG').style.marginLeft = '';                                },                            };                            info_variants(undefined, lst, 'Смещение изображения');                        },                        'Вместить': function() {                            save_mem();                            get_tag('IMG').style.objectFit = 'contain';                        },                        'Обрезать но поставить в центр': function() {                            save_mem();                            get_tag('IMG').style.objectFit = 'cover';                        },                        'Изменить путь вручную<br>(прописать авто-подстановку)': function() {                            info_inputString(undefined, function() {                                self_.setAttribute('src', bufferText);                            }, 'Изменить путь вручную<br>(прописать авто-подстановку)', self_.getAttribute('src'));                        },                        'Радиус': function() {                            info_inputString(undefined, function() {                                save_mem();                                get_tag('IMG').style.borderRadius = bufferText;                            }, 'Введите радиус с указанием<br>размерностей напр. 120px или 50%', '50%');                        },                    };                    info_variants(undefined, arrm, 'Изображение');                };                break;            case 'TBODY':                lst['Добавить строку'] = function() {                    let new_row = document.createElement('TR');                    new_row.innerHTML = '<td style="padding: 10px"><p>Новая строка и ячейка</p></td>';                    info_qest(undefined, function() {                        save_mem();                        get_tag('TBODY').insertBefore(new_row, get_tag('TR'));                    }, function() {                        save_mem();                        get_tag('TBODY').insertBefore(new_row, get_tag('TR').nextSibling);                    }, 'Выше или ниже текущей?', 'Выше', 'Ниже');                };                lst['Контейнеры'] = function() {                    let tbl = get_tag('TABLE');                    if(get_tag('TABLE') !== false) {                        tbl = get_tag('TABLE');                    } else if(get_tag('TBODY') !== false) {                        tbl = get_tag('TBODY').parentElement;                    } else {                        return false;                    }                    let lost = {                        'Создать новый': function() {                            let new_tbl = document.createElement('TABLE');                            new_tbl.innerHTML = '<tbody><tr><td style="padding: 10px"><p>Новый контейнер строка и ячейка</p></td></tr></tbody>';                            info_qest(undefined, function() {                                save_mem();                                tbl.parentElement.insertBefore(new_tbl, tbl);                            }, function() {                                save_mem();                                tbl.parentElement.insertBefore(new_tbl, tbl.nextSibling);                            }, 'Выше или ниже текущего?', 'Выше', 'Ниже');                        },                        'Клонировать': function() {                        },                        'Параметры': function() {                            let llist = {                                'Выравнивание': function() {                                    let llist = {                                        'Слева': function() {                                            save_mem();                                            tbl.setAttribute('align', 'left');                                        },                                        'По центру': function() {                                            save_mem();                                            tbl.setAttribute('align', 'center');                                        },                                        'Справа': function() {                                            save_mem();                                            tbl.setAttribute('align', 'right');                                        },                                    };                                    info_variants(undefined, llist, 'Параметры контейнера<br>Выравнивание');                                },                                'Размеры':function() {                                    info_inputString(undefined, function() {                                        save_mem();                                        tbl.setAttribute('width', bufferText);                                        tbl.setAttribute('max-width', bufferText);                                        tbl.setAttribute('min-width', bufferText);                                    }, 'Введите ширину с указанием<br>размерностей напр. 600px или 50%', '600px');                                },                            };                            info_variants(undefined, llist, 'Контейнеры. Параметры.')                        },                        'Изменить фон контейнера': function() {                            let llist = {                                'Цвет': function() {                                    if($('#color-panel').length > 0) {                                        document.getElementById('color-panel').remove();                                    }                                    buffer_Obj_m = get_tag('TBODY');                                    let colaur = $('<div id="color-panel" style="position: absolute; right: 5px; top: 80px;" class="flex column"><input id="color-box" style="display: inline-block; right: 5px; top: 5px; width: 120px; height: 120px" type="color"><input id="ranger" style="display: inline-block; width: 120px; height: 10px; margin-top: 4px; cursor: pointer;" onchange="changer_alpha(this)" value="255" type="range" step="1" min="0" max="255"><div><button onclick="change_color(\'container\')">ok</button><button onclick="this.parentElement.parentElement.remove()">❌</button></div></div>');                                    $('#item-4').append(colaur);                                },                                'Изображение': function() {                                    buffer_Obj_m = get_tag('TBODY').parentElement;                                    let llist = {                                        'Выбрать из галереи': function() {                                            open_table('file', undefined);                                        },                                        'Вставить ссылку': function() {                                            info_inputString(undefined, function() {                                                save_mem();                                                obj.innerHTML = '<img style="width: 70px" src="'+bufferText+'">';                                            }, 'Вставьте полную ссылку<br>напр. https://pictures/pic.png');                                        },                                    };                                    info_variants(undefined, llist, 'Фон (изображение)');                                },                            };                            info_variants(undefined, llist, 'Фон');                        },                        'Удалить': function() {                            info_qest(undefined, function() {                                save_mem();                                tbl.remove();                            }, function() {                            }, 'Действительно удалить<br>контейнер со всем<br>содержимым?', 'Удалить', 'Отменить удаление');                        },                    };                    info_variants(undefined, lost, 'Контейнеры');                };                break;            case 'TR':                lst['Удалить строку'] = function() {                    save_mem();                    get_tag('TR').remove();                };                lst['Изменить цвет фона строки'] = function() {                    if($('#color-panel').length > 0) {                        document.getElementById('color-panel').remove();                    }                    buffer_Obj_m = get_tag('TR');                    let colaur = $('<div id="color-panel" style="position: absolute; right: 5px; top: 80px;" class="flex column"><input id="color-box" style="display: inline-block; right: 5px; top: 5px; width: 120px; height: 120px" type="color"><input id="ranger" style="display: inline-block; width: 120px; height: 10px; margin-top: 4px; cursor: pointer;" onchange="changer_alpha(this)" value="255" type="range" step="1" min="0" max="255"><div><button onclick="change_color(\'row\')">ok</button><button onclick="this.parentElement.parentElement.remove()">❌</button></div></div>');                    $('#item-4').append(colaur);                };                break;        }    }    info_variants(undefined, lst, 'Действия');}buffer_hex = 'ff';function change_color(types) {    let color = document.getElementById('color-box').value;    switch (types) {        case 'container':            save_mem();            buffer_Obj_m.parentElement.style.backgroundColor = color+buffer_hex;            buffer_Obj_m.removeAttribute('style');            break;        case 'row':        case 'cell':            save_mem();            buffer_Obj_m.style.backgroundColor = color+buffer_hex;            break;        case 'text':            save_mem();            buffer_Obj_m.style.color = color+buffer_hex;            break;        case 'fontcolor':            save_mem();            atributer('fontcolor', color, buffer_range);            break;    }}function removeAllAttrs(element) {    for (let i= element.attributes.length; i-->0;) {        element.removeAttributeNode(element.attributes[i]);    }    save_mem();}function changer_alpha(obj) {    let hex_ = zero_plus((+obj.value).toString(16), 2);    buffer_hex = hex_;    let op = obj.value / 2.55 / 100;    document.getElementById('color-box').style.opacity = op;}$formFactor = null;dblclicker = function(obj) {    console.log('000');    if($(obj).children('.header-folder').length > 0) {        $idfolder = parseInt($(obj).attr('data-idfolder'));        $galleryPath = $idfolder;        localStorage.setItem('localFolder', $idfolder);        $('#gallery').remove();        gallery();    } else {        if($formFactor !== null) {        } else {            if(types === 'img') {                save_mem();                buffer_Obj_m.innerHTML = '<img style="width: 70px; display: inline-block;" src="https://rumbra.ru/DOWNLOAD/'+$(obj).attr("data-name")+'">'                $('#gallery').remove();                $formFactor = null;            }            if(types === 'back') {                save_mem();                buffer_Obj_m.style.backgroundImage = "url('https://rumbra.ru/DOWNLOAD/"+$(obj).attr('data-name')+"')";                buffer_Obj_m.style.backgroundSize = "100% auto";                $('#gallery').remove();                $formFactor = null;            }        }    }};function load_mail(obj) {    buffer_app = 'MAILER';    SENDER_APP('get_mail', {get_mail: $(obj).val()}, function(mess) {        $('.mail-content').html(mess);        $('.mail-content').attr('contenteditable', 'true');        clear_mem();        buffer_email_name = $(obj).val();        if($(obj).val() === 'Новый шаблон') {            $('#save-btn').addClass('disabled');        } else {            $('#save-btn').removeClass('disabled');        }    });}function save_mem() {    if((mem_m.length-1)<mem_id) {        mem_m.push($('.mail-content').html());    } else {        mem_m[mem_id] = $('.mail-content').html();    }    ++mem_id;}function clear_mem() {    mem_m = [];    mem_id=0;}function back_mem() {    if(mem_id >0) {        $('.mail-content').html(mem_m[--mem_id]);        if(mem_id === -1) mem_id=0;    }}function forwarder() {    if(mem_m.length > 0 && mem_id<=(mem_m.length+1)) {        $('.mail-content').html(mem_m[++mem_id]);    }}function deller() {    info_qest(undefined, function() {        SENDER_APP('del', {del: $('.sellector select').val()}, function(mess) {            if(mess === 'ok') {                say('Шаблон - удалён.');                location.reload();            } else {                say(mess, 2);            }        });    }, function() {    }, 'Подтвердите полное удаление текущего шаблона?', 'Подтверждаю', 'Отмена');}function send() {    info_inputString(undefined, function() {        SENDER_APP('sender', {sender: $('.sellector select').val(), email: bufferText}, function(mess) {            console.log(mess);            say(mess);        });    }, 'Введите почту на которую будет отправлен текущий шаблон:', 'mail@mail.com');}function save() {    let dom = document.getElementById('mail').innerHTML;    SENDER_APP('save', {save: $('.sellector select').val(), html: dom}, function(mess) {        say(mess);    });    // console.log(dom);}function copyd() {    info_inputString(undefined, function() {        SENDER_APP('copyd', {copyd: $('.sellector select').val(), new_name: bufferText}, function(mess) {            if(mess === 'ok') {                say('Копирование успешно');                location.reload();            } else {                say(mess, 2);            }        });    }, 'Введите новое имя для шаблона', 'Новое имя');}function backer() {    back_mem();}function sellector() {    let range = window.getSelection().getRangeAt(0);    let start = range.startContainer;    let end = range.endContainer;    let root = range.commonAncestorContainer;    if(range.startContainer.nodeName === '#text') {        range.setStartBefore(start);        range.setEndAfter(end);    }    window.getSelection().removeAllRanges();    window.getSelection().addRange(range);}function atributer(act, param='', ranger=null) {    save_mem();    let range = null;    let selectionContents = null;    let span = null;    switch(act) {        case 'clear':            range = window.getSelection().getRangeAt(0);            let start = range.startContainer;            let end = range.endContainer;            let root = range.commonAncestorContainer;            range.setStartBefore(start);            range.setEndAfter(end);            range.startContainer;            if (start === end) root = start;            if (start.nodeName.toLowerCase() === "body") return null;            // если узлы текстовые, берем их родителей            if (start.nodeName === "#text") start = start.parentNode;            if (end.nodeName === "#text") end = end.parentNode;            // var selectionContents = range.toString();            selectionContents = range.extractContents();            let txt = selectionContents.textContent;            span = document.createElement('span');            $(span).text(txt);            range.insertNode(span);            break;        case 'align':            range = window.getSelection().getRangeAt(0);            selectionContents = range.extractContents();            span = document.createElement('span');            span.style.textAlign = param;            span.appendChild(selectionContents);            range.insertNode(span);            break;        case 'fontsize':            range = window.getSelection().getRangeAt(0);            selectionContents = range.extractContents();            span = document.createElement('span');            span.style.fontSize = param;            span.appendChild(selectionContents);            range.insertNode(span);            break;        case 'del':            range = window.getSelection().getRangeAt(0);            selectionContents = range.extractContents();            span = document.createElement('span');            span.style.textDecoration = 'line-through';            span.appendChild(selectionContents);            range.insertNode(span);            break;        case 'underline':            range = window.getSelection().getRangeAt(0);            selectionContents = range.extractContents();            span = document.createElement('span');            span.style.textDecoration = 'underline';            span.appendChild(selectionContents);            range.insertNode(span);            break;        case 'bold':            range = window.getSelection().getRangeAt(0);            selectionContents = range.extractContents();            span = document.createElement('span');            span.style.fontWeight = '900';            span.appendChild(selectionContents);            range.insertNode(span);            break;        case 'italic':            range = window.getSelection().getRangeAt(0);            selectionContents = range.extractContents();            span = document.createElement('span');            span.style.fontStyle = 'italic';            span.appendChild(selectionContents);            range.insertNode(span);            break;        case 'fontcolor':            selectionContents = ranger.extractContents();            span = document.createElement('span');            span.style.color = param;            span.appendChild(selectionContents);            ranger.insertNode(span);            break;        case 'fontname':            range = window.getSelection().getRangeAt(0);            selectionContents = range.extractContents();            span = document.createElement('span');            span.style.fontFamily = param;            span.appendChild(selectionContents);            range.insertNode(span);            break;    }}function task() {    let range = window.getSelection().getRangeAt(0);    let selectionContents = range.extractContents();    // say(selectionContents.textContent);    let span = document.createElement('span');    span.appendChild(selectionContents);    span.setAttribute("style", 'font-size: 30px; font-weight: bold;');    // span.classList.add('phrase');    // span.style.backgroundColor = $color;    // span.style.color = $pan;    range.insertNode(span);}let list_count = 0;let list_ok = 0;let list_error = 0;function begin_sending() {    let llist = document.getElementById('emails-list').value.split('\n');    for(let i in llist) {        if(type_list === 'email') {            if (llist[i].length > 5) {                add_queue(llist[i]);            } else {                add_error(llist[i], 'Символов < 6');            }        } else {            add_queue(llist[i]);        }    }    $('#emails-list').val('');    $('#emails-list').css('height', '20px');    AJAX('/robin', {begin_mail: buffer_email_name, type_list: type_list}, function(mess) {        if(mess === 'ok') {            send_next();        } else {            say(mess, 2);        }    });}function add_error(text, error_mess) {    $('.error-queue').append($('<li>['+text+'] <span style="color: red">('+error_mess+')</span></li>'));    ++list_error;    $('#error-count').text('Ошибки ('+list_error+')');}function add_queue(text) {    $('.list-queue').append($('<li>'+text+'</li>'));    ++list_count;    $('#queue-count').text('В очереди ('+list_count+')');}function rem_queue(email) {    $('.list-queue li').each(function(e, t) {        if($(t).text() === email) {            list_count--;            $(t).remove();        }    });    $('#queue-count').text('В очереди ('+$('.list-queue li').length+')');}function add_ok(text) {    $('.ok-queue').append($('<li>['+text+']</li>'));    ++list_ok;    $('#ok-count').text('Успешно ('+list_ok+')');}function send_next() {    if($('.list-queue li').length > 0) {        let arr = {};        arr.sender_email = $('.list-queue').find('li:first-child').text();        AJAX('/robin', arr, function(mess) {            if(mess === 'ok') {                add_ok(arr.sender_email);                rem_queue(arr.sender_email);                send_next();            } else {                add_error(arr.sender_email, mess);                rem_queue(arr.sender_email);                send_next();            }        });    } else {        say('Все доступные передачи<br>Осуществлены.', 4);    }}function transform_mail() {    let dom = document.getElementById('mail').innerHTML;    let arr = {        transform_text: dom,    };    SENDER_APP('transform_text', arr, function(mess) {        mess = JSON.parse(mess);        console.dir(mess);        if(mess.status === 'ok') {            document.getElementById('mail').innerHTML = mess.html;            $('#save-btn').addClass('disabled');        } else {            say(mess.text, 2);        }    });}function update_template() {    info_qest(undefined, function() {        load_mail($('select'));    }, function() {    }, 'Все несохранённые действия с<br>текущим мкетом будут утеряны.<br>Подтвердите загрузку шаблона из хранилища?', 'Подтверждаю', 'Отменить');}function buffer_see() {    $('.log').toggleClass('log-show');    refesh_log();}function refesh_log() {    AJAX('/robin', {get_log: true}, function(mess) {        mess = JSON.parse(mess);        $('#ta').val(mess);    });}function save_log() {    AJAX('/robin', {save_log: $('#ta').val()}, function(mess) {        if(mess === 'ok') {            say('Успешно');        }    });}function log_clear() {    $('#ta').val('');    save_log();}
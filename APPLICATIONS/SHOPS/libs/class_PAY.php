<?phpclass PAY {    public static function is_payed_correct_summ($user_id, $summ): float|bool {        $cash = (float)PROFIL::init($user_id)->get('cash', 0);        if($cash-$summ >= 0) {            return true;        }        return $cash-$summ;    }    public static function get_all_pays($id_user='self', $paginator_num=1, $count_paginator_package=25): array    {        if($id_user === 'self') {            $id_user = Access::userID();        } else {            $id_user = (int)$id_user;        }        $count = (int)SQL_ROWS(q("SELECT COUNT(*) FROM `pays` WHERE `user_id`=".$id_user))[0]['COUNT(*)'];        $pagin_count = round($count / $count_paginator_package);        $from = (int)($paginator_num * $count_paginator_package - $count_paginator_package);        $ask = q("            SELECT * FROM `pays` WHERE             `user_id`=".$id_user." ORDER BY `id` DESC LIMIT ".$from.",".(int)$count_paginator_package."            ");        $arr = SQL_ROWS($ask);        if(count($arr)>0) {                return[                    'count'=>$count,                    'count_paginators'=>$pagin_count,                    'items'=>$arr,                ];        } else {                return[                    'count'=>0,                    'count_paginators'=>0,                    'items'=>[],                ];        }    }    public static function add_cash($user_id, $summ, $type_pay='Кошелёк|Карта безнал|Админ|По тарифу|-', $descr='-'): bool {        switch($type_pay) {            case 'Кошелёк':            case 'По тарифу':            case 'Карта безнал':            case 'Админ':                break;            default:                $type_pay ='-';                break;        }        q("        INSERT INTO `pays` SET        `user_id`       = ".(int)$user_id.",        `time_pay`      = '".date('Y-m-d H:i:s')."',        `time_pay_ok`   = '".date('Y-m-d H:i:s')."',        `status`        = 1,        `type_pay`      = '".$type_pay."',        `summ`          = ".(int)$summ.",        `descr`         = '".db_secur($descr)."'        ");        $P = PROFIL::create($user_id, PROFIL_TYPE::id);        $cash = round((float)$P->get('cash'), 2);        $cash += $summ;        $P->set('cash', round($cash, 2));        TELE::send_at_user_name($P->get_field('login'), 'Пополнение счёта на '.$summ.' руб.');        $headers = 'MIME-Version: 1.0' . "\r\n";        $headers .= 'Content-type: text/html; charset=UTF-8' . "\r\n";        $body = "<div><h1>".Core::$SiteName."</h1><div>На Ваш счёт, зачислено ".$summ." руб.<br>".$descr."</div></div>";        mail($P->get_field('email'), 'Уведомление о зачислении.', $body, $headers);        return true;    }    /**     * ТОЛЬКО ИНИЦИИРУЕТ ПЛАТЁЖ НО НЕ ОТНИМАЕТ ДЕНЬГИ STATUS=0     * @param $user_id     * @param $summ     * @param $type_operation     * @param $descr     * @return int     */    public static function init_pay($user_id,                                    $summ,                                    $type_operation='Списание|Пополнение счёта|Покупка тарифа|Продление объявления|Оплата размещения объявлений',                                    $descr='Пополнение кошелька',                                    ): int {        $access_type = ['Списание', 'Пополнение счёта', 'Покупка тарифа', 'Продление объявления', 'Оплата размещения объявлений'];        if(!in_array($type_operation, $access_type)) {            $type_operation = 'Пополнение счёта';        }        if(q("        INSERT INTO `pays` SET        `operation`     = '".db_secur($type_operation)."',        `user_id`       = ".(int)$user_id.",        `time_pay`      = '".date('Y-m-d H:i:s')."',        `time_pay_ok`   = '1970-01-01 03:00:00',        `status`        = 0,        `type_pay`      = 'Карта безнал',        `summ`          = ".round((float)$summ, 2).",        `descr`         = '".db_secur($descr)."'        ")) {            return SUBD::get_last_id();        }        return -1;    }    public static function buy($user_id, $summ, $operation='Покупка товара|Продление баннера|Баннер на главной|Списание|Покупка тарифа|Продление объявления|Оплата размещения объявлений|Продление тарифа', $type_pay='Кошелёк|По тарифу|Карта безнал|Админ|-', $descr='', $only_calc=false): bool    {        switch($type_pay) {            case 'Кошелёк':            case 'Карта безнал':            case 'Админ':            case 'По тарифу':                break;            default:                $type_pay ='-';                break;        }        $P = PROFIL::init($user_id);        $cash = round((float)$P->get('cash'),2);        if($cash - (float)$summ >=0) {            if($only_calc === false) {                $P->set('cash', round($cash - (float)$summ));                q("                INSERT INTO `pays` SET                `user_id`       = " . (int)$user_id . ",                `operation`     = '" . $operation . "',                `time_pay`      = '" . date('Y-m-d H:i:s') . "',                `time_pay_ok`   = '" . date('Y-m-d H:i:s') . "',                `status`        = 1,                `type_pay`      = '" . $type_pay . "',                `summ`          = " . round((float)$summ, 2) . ",                `descr`         = '" . db_secur($descr) . "'                ");                TELE::send_at_user_name(Access::userName(), 'С Вашего счёта на '.Core::$SiteName.' оплачено '.$summ.' Р');            }            return true;        } else {            if($only_calc === false) {                q("                INSERT INTO `pays` SET                `user_id`       = " . (int)$user_id . ",                `operation`     = '" . $operation . "',                `time_pay`      = '" . date('Y-m-d H:i:s') . "',                `time_pay_ok`   = '" . date('Y-m-d H:i:s') . "',                `status`        = -1,                `type_pay`      = '" . $type_pay . "',                `summ`          = " . round((float)$summ, 2) . ",                `descr`         = '" . db_secur($descr) . "'                ");            }            return false;        }    }}
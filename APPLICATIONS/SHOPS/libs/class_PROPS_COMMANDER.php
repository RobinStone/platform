<?phpclass PROPS_COMMANDER {    public array $i_bool = [];    public array $i_float = [];    public array $i_int = [];//    public array $i_json = [];    public array $i_string = [];    public array $i_text = [];    private array $schema;    /**     * @param array $indexer_ids     */    function __construct(array $indexer_ids) {        if(empty($indexer_ids)) {            return;        }        $this->schema = get_schema('product_fields');        SORT::change_preview_key($this->schema, 'id', 'field_name');        $this->i_string = SQL_ROWS(q("SELECT * FROM i_string WHERE indexer_id IN (".implode(',',$indexer_ids).")"));        $this->execute_schema($this->i_string);        $this->i_int = SQL_ROWS(q("SELECT * FROM i_int WHERE indexer_id IN (".implode(',',$indexer_ids).")"));        $this->execute_schema($this->i_int);        $this->i_float = SQL_ROWS(q("SELECT * FROM i_float WHERE indexer_id IN (".implode(',',$indexer_ids).")"));        $this->execute_schema($this->i_float);        $this->i_bool = SQL_ROWS(q("SELECT * FROM i_bool WHERE indexer_id IN (".implode(',',$indexer_ids).")"));        $this->execute_schema($this->i_bool);        $this->i_text = SQL_ROWS(q("SELECT * FROM i_text WHERE indexer_id IN (".implode(',',$indexer_ids).")"));        $this->execute_schema($this->i_text);//        $this->i_json = SQL_ROWS(q("SELECT * FROM i_json WHERE indexer_id IN (".implode(',',$indexer_ids).")"));//        $this->execute_schema($this->i_json);    }    public function get_all_props(): array    {        $result = [];        foreach($this->i_string as $v) {            $result[$v['indexer_id']][$v['alias']][] = $v;        }        foreach($this->i_int as $v) {            $result[$v['indexer_id']][$v['alias']][] = $v;        }        foreach($this->i_float as $v) {            $result[$v['indexer_id']][$v['alias']][] = $v;        }        foreach($this->i_bool as $v) {            $result[$v['indexer_id']][$v['alias']][] = $v;        }        foreach($this->i_text as $v) {            $result[$v['indexer_id']][$v['alias']][] = $v;        }//        foreach($this->i_json as $v) {//            $result[$v['alias']][] = $v;//        }        return $result;    }    private function execute_schema(&$arr) {        if(empty($arr)) {            return;        }        foreach($arr as $k=>$v) {            $arr[$k] = [                'schema_id'=>$v['props_id'],                'indexer_id'=>$v['indexer_id'],                'value'=>$v['val'],                'id'=>$v['id'],                'alias'=>$this->schema[$v['props_id']]['alias'],                'field_name'=>$this->schema[$v['props_id']]['field_name'],            ];        }    }    /**     * Позволяет получить любое свойство товара     *     * @param int $shop_id - id магазина     * @param int $prod_id - id товара     * @param string $prop_rus_name_or_table_field - имя поискового параметра     * доступны для вызова из таблицы: 'Широта', 'Долгота', 'IDcountry', 'IDcity'     * 'id', 'active', 'status', 'name', 'price', 'count', 'owner_id', 'city_id',     * 'showed', 'category', 'under-cat', 'action-list', 'created', 'changed', 'active_to'     * @return array|bool|mixed|null     */    public static function get_prop(int $shop_id, int $prod_id, string $prop_rus_name_or_table_field): mixed    {        $schema = get_schema('product_fields');        $coords = ['Широта', 'Долгота', 'IDcountry', 'IDcity'];        $indexer_table = ['id', 'active', 'status', 'name', 'price',            'count', 'owner_id', 'city_id', 'showed', 'category',            'under-cat', 'action-list', 'created', 'changed', 'active_to'];        if(isset($schema[$prop_rus_name_or_table_field])) {            if($indexer_id = SQL_ONE_ROW(q("SELECT id FROM indexer WHERE prod_id=".$prod_id." AND shop_id=".$shop_id." LIMIT 1"))) {                $indexer_id = (int)$indexer_id['id'];                if(isset($coords[$prop_rus_name_or_table_field])) {                    return SQL_ONE_ROW(q("SELECT `".$prop_rus_name_or_table_field."` FROM coords WHERE id=".$indexer_id));            } else {                    $prop_item = $schema[$prop_rus_name_or_table_field];                    return SQL_ONE_ROW(q("SELECT `val` FROM `i_".$prop_item['type']."` WHERE `props_id`=".$prop_item['id']." AND indexer_id=".$indexer_id))['val'];                }            }        } elseif(in_array($prop_rus_name_or_table_field, $indexer_table)) {            switch($prop_rus_name_or_table_field) {                case 'category': $prop_rus_name_or_table_field = 'shops_categorys'; break;                case 'under-cat': $prop_rus_name_or_table_field = 'shops_undercats'; break;                case 'action-list': $prop_rus_name_or_table_field = 'shops_lists'; break;            }            if($indexer_ans = SQL_ONE_ROW(q("SELECT `".$prop_rus_name_or_table_field."` FROM indexer WHERE prod_id=".$prod_id." AND shop_id=".$shop_id." LIMIT 1"))) {                return $indexer_ans[$prop_rus_name_or_table_field];            }        }        return null;    }}
<?phpclass OPERATIONS {    public static function get_order_list($array_only=false): array {        $ask = q("        SELECT 'to' AS lid, alerts.*, rooms.client_id, rooms.owner, rooms.shop_id, rooms.product_id, rooms.showed_us, rooms.params FROM `alerts`        LEFT JOIN `rooms` ON        alerts.room_id = rooms.room_id WHERE         rooms.type = 'product' AND        alerts.id_user = ".Access::userID()."        ");        $alerts = SQL_ROWS_FIELD($ask, 'id');        $my_queries = self::my_order_queries();        $alerts = array_merge($alerts, $my_queries);        $users_id = [];        foreach($alerts as $k=>$v) {            $alerts[$k]['f_date'] = date('d.m.Y H:i', strtotime($v['datatime']));            $alerts[$k]['params'] = explode('~~', $v['params']);            $alerts[$k]['name'] = $alerts[$k]['params'][0];            $alerts[$k]['price'] = $alerts[$k]['params'][1];            $alerts[$k]['img'] = './IMG/img100x100/'.$alerts[$k]['params'][2];            if(!in_array((int)$v['client_id'], $users_id)) { $users_id[] = (int)$v['client_id']; }            if(!in_array((int)$v['owner'], $users_id)) { $users_id[] = (int)$v['owner']; }        }        if(count($users_id) > 0) {            $ask = q("SELECT users.id, users.login, users.avatar, users.email, users.params FROM users WHERE id IN (" . implode(',', $users_id) . ")");            $rows = SQL_ROWS_FIELD($ask, 'id');            foreach ($alerts as $k => $v) {                if (isset($rows[$v['client_id']])) {                    $alerts[$k]['client_id_array'] = $rows[$v['client_id']];                } else {                    $alerts[$k]['client_id_array'] = [                        'id' => -1,                        'login' => 'user',                        'email' => '-',                        'avatar' => '20230531-120816_id-2-498113.svg',                        'params' => '',                    ];                }                if (isset($rows[$v['owner']])) {                    $alerts[$k]['owner_array'] = $rows[$v['owner']];                } else {                    $alerts[$k]['owner_array'] = [                        'id' => -1,                        'login' => 'user',                        'email' => '-',                        'avatar' => '20230531-120816_id-2-498113.svg',                        'params' => '',                    ];                }            }            return SORT::array_sort_by_column($alerts, 'datatime', SORT_DESC);        } else {            return [];        }    }    public static function my_order_queries(): array {        $ask = q("        SELECT 'from' AS lid,         rooms.room_id,         rooms.created AS datatime,         rooms.client_id,         rooms.owner,         rooms.shop_id,         rooms.product_id,         rooms.showed_us,         rooms.params,         alerts.showed         FROM `rooms` LEFT JOIN `alerts`        ON rooms.room_id = alerts.room_id        WHERE         rooms.type = 'product' AND        `client_id` = ".Access::userID()." ORDER BY `datatime` DESC");        return SQL_ROWS($ask);    }}
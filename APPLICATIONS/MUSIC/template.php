<section class="shop-wrapp">    <div class="flex align-center gap-10 search-block" style="padding: 3px 0 0">        <button onclick="update_complite()" class="btn-gray btn-gray-text not-border micro-btn padding-btn"><img style="width: 15px; height: 18px" src="/IMG/SYS/circler.svg"></button>        <div class="text-input-wrapper">            <input oninput="finder_track(this)" type="text">        </div>        <audio id="player" style="display: inline-block; max-height: 29px; margin-left: auto" controls="controls"></audio>    </div>    <div class="tables-wrapper flex gap-10" style="margin-top: 10px">        <div id="table-folder"></div>        <div id="table-files"></div>        <div id="buttons">            <button class="btn-gray btn-gray-text not-border micro-btn padding-btn" onclick="change_folder()">Поместить в папку</button>            <button class="btn-gray btn-gray-text not-border micro-btn padding-btn" onclick="del_complite()">Полностью удалить из системы</button>        </div>    </div></section><input style="display: none" class="invisible-input" id="input-files" type="file" accept=".mp3" multiple="multiple"><template id="menu-files-row">    <div class="menu-files-row flex gap-10">        <button onclick="sell_all()" class="btn-gray btn-gray-text not-border micro-btn padding-btn">Отметиь/Снять всё</button>        <button onclick="invertation()" class="btn-gray btn-gray-text not-border micro-btn padding-btn">Инвертировать</button>    </div></template><script>    let tracks = <?=json_encode(MEDIA::get_all_audio(), JSON_UNESCAPED_UNICODE)?>;    console.dir(tracks);    setTimeout(function() {        update_folders();    }, 100);    document.querySelector('#input-files').onchange = function (event) {        const files = event.target.files;        for(let file of files) {            if (file.size <= 11 * 1024 * 1024) {                upload_files_in_folder(file);            } else {                say("Разрешено загружать файлы до 11 Мб", 2);            }        }    };    function upload_files_in_folder(file, folder_name='-') {        console.log('Файл ------------');        if(file.type !== 'audio/mpeg') {            say('Плеер поддерживает только аудио формат<br>(mp3, wav)', 2);            return false;        }        console.dir(file);        let ind = $('<div class="ind"><span>'+file.name+'</span><div class="ind-ind"></div></div>')        $('#indicators').append(ind);        const formData = new FormData();        formData.append("userfile", file);        formData.append("com", 'files');        formData.append("table", 'file');        formData.append("column", 'none');        formData.append("in_system_folder", folder_name);        formData.append("id", -1);        const xhr = new XMLHttpRequest();        xhr.upload.onprogress = function(event) {            let percent = 100 - Math.round(event.total - event.loaded) / event.total * 100;            percent = Math.round(percent);            $(ind).find('.ind-ind').css('width', percent+'%');            // console.log('Загрузка данных: '+percent+' %');        };        xhr.onload = xhr.onerror = function() {            if (this.status === 200) {                let mess = JSON.parse(xhr.response);                console.dir(mess);                if(mess.status === 'ok') {                    update_all_tracks(function() {                        update_files('GLOBAL');                    });                    $(ind).remove();                }            } else {                say('Не удалось отправить файл');            }            // console.log('ОТВЕТ='+ajax.responseText);            console.log('===============================');            console.log('===============================');        };        xhr.open("POST", domain, true);        xhr.responseType = 'text';        xhr.send(formData);    }</script>